{"version":3,"sources":["components/common/CardHeader/CardHeader.js","constants/constants.js","components/ButtonSelectorNode/ButtonSelectorNode.js","../node_modules/@material-ui/icons/Clear.js","components/sidePanel/Events/Events.js","../node_modules/@material-ui/core/esm/ListItem/ListItem.js","../node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","components/sidePanel/Conditions/Conditions.js","components/sidePanel/Actions/Actions.js","views/home/HomePage.js"],"names":["CardHeader","props","handleSave","hasPreviewButton","children","rest","history","useHistory","className","disableRipple","variant","onClick","push","pathname","EVENTS","id","name","CONDITIONS","ACTIONS","type","label","SAMPLE_EVENT_TRIGGERS","eventKey","eventDisplay","fields","conditionKey","conditionDisplay","options","SAMPLE_ACTIONS","actionKey","actionDisplay","key","placeHolder","option","CONDITION_OPERATORS","value","memo","data","isConnectable","selectedElements","useStoreState","store","focusNodeAction","item","disabled","btnLabel","e","btnAction","stopPropagation","handleSwapConditionArrows","Object","keys","includes","values","map","cond","operator","join","replace","length","a","i","Fragment","handleSelectAction","actionInputs","ai","handleDeleteAction","btnLabel2","btnAction2","position","style","bottom","top","background","_interopRequireDefault","require","_interopRequireWildcard","defineProperty","exports","default","React","_default","createElement","d","Events","handleSelect","selectedEventKey","useState","showMore","setShowMore","Typography","Button","startIcon","endIcon","useEnhancedEffect","window","ListItem","ref","_props$alignItems","alignItems","_props$autoFocus","autoFocus","_props$button","button","childrenProp","classes","componentProp","component","_props$ContainerCompo","ContainerComponent","_props$ContainerProps","ContainerProps","ContainerClassName","_objectWithoutProperties","_props$dense","dense","_props$disabled","_props$disableGutters","disableGutters","_props$divider","divider","focusVisibleClassName","_props$selected","selected","other","context","ListContext","childContext","listItemRef","current","focus","toArray","hasSecondaryAction","isMuiElement","handleOwnRef","instance","ReactDOM","handleRef","useForkRef","componentProps","_extends","clsx","root","gutters","alignItemsFlexStart","secondaryAction","Component","focusVisible","ButtonBase","Provider","container","pop","withStyles","theme","display","justifyContent","textDecoration","width","boxSizing","textAlign","paddingTop","paddingBottom","backgroundColor","palette","action","opacity","borderBottom","concat","backgroundClip","paddingLeft","paddingRight","transition","transitions","create","duration","shortest","hover","MenuItem","tabIndex","_props$component","ListItemClasses","_props$role","role","tabIndexProp","undefined","typography","body1","_defineProperty","minHeight","overflow","whiteSpace","breakpoints","up","body2","Conditions","selectedConditionObj","useEffect","setConditions","setMustMeet","initialConditionObj","selectedEventFields","find","t","mustMeet","conditions","handleOnChange","index","keyName","tempConditions","assign","split","FormControl","InputLabel","Select","labelId","onChange","target","c","splice","handleOnRemove","f","filter","o","TextField","fullWidth","margin","FormHelperText","result","Actions","selectedActionObj","handleAddAction","actionsArr","setClickedAction","formatActionInputs","onFocusObj","tempAction","forEach","input","clickedAction","handleFieldInputChange","field","tempClickedAction","fieldIndex","findIndex","opt","placeholder","nodeTypes","btnSelectorNode","ButtonSelectorNode","HomePage","flow","setFlow","showDrawer","setShowDrawer","selectedNode","setSelectedNode","selectedActionIndex","setSelectedActionIndex","initialElements","x","y","elements","setElements","elementsStateRef","useRef","selectedNodeStateRef","generateNextStepNodeObj","nodeId","tempElems","Number","toString","itemIndex","source","tempElemIndex","tempElements","yesNodeIndex","el","noNodeIndex","recursionFormObj","obj","yesNodeId","noNodeId","Background","fullHeight","color","event","conditionObj","actionObj","slice","output","noCondition","console","log","elementsSelectable","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","onSelectionChange"],"mappings":"8OAQMA,EAAa,SAAAC,GAAU,IACnBC,EAAoDD,EAApDC,WAAYC,EAAwCF,EAAxCE,iBAAkBC,EAAsBH,EAAtBG,SAAaC,EADzB,YACkCJ,EADlC,8CAEpBK,EAAUC,cAKhB,OACE,8CAAKC,UAAS,cAAoBH,GAAlC,cACE,sBAAKG,UAAU,eAAf,UACGJ,EACD,cAAC,IAAD,CAAYK,eAAa,EAAzB,SACE,cAAC,IAAD,SAGJ,sBAAKD,UAAU,SAAf,UACGL,GACC,cAAC,IAAD,CAAQO,QAAQ,OAAOF,UAAU,cAAcG,QAblC,WACnBL,EAAQM,KAAK,CAAEC,SAAU,cAYnB,2BAIDX,GACC,cAAC,IAAD,CAAQQ,QAAQ,YAAYC,QAAST,EAArC,2B,iCC9BV,4MAAO,IAAMY,EAAS,CACpB,CAAEC,GAAI,EAAGC,KAAM,oBACf,CAAED,GAAI,EAAGC,KAAM,cACf,CAAED,GAAI,EAAGC,KAAM,kBACf,CAAED,GAAI,EAAGC,KAAM,qBAGJC,EAAa,CACxB,CAAEF,GAAI,EAAGC,KAAM,gBACf,CAAED,GAAI,EAAGC,KAAM,gBACf,CAAED,GAAI,EAAGC,KAAM,qBACf,CAAED,GAAI,EAAGC,KAAM,kBACf,CAAED,GAAI,EAAGC,KAAM,gBACf,CAAED,GAAI,EAAGC,KAAM,iBAEJE,EAAU,CACrB,CACEH,GAAI,EACJC,KAAM,wBACNG,KAAM,QACNC,MAAO,iBAET,CAAEL,GAAI,EAAGC,KAAM,eAAgBG,KAAM,MAAOC,MAAO,kBACnD,CAAEL,GAAI,EAAGC,KAAM,qBAAsBG,KAAM,MAAOC,MAAO,kBACzD,CAAEL,GAAI,EAAGC,KAAM,iBAAkBG,KAAM,MAAOC,MAAO,mBAG1CC,EAAwB,CACnC,CACEC,SAAU,WACVC,aAAc,mBACdC,OAAQ,CACN,CACEC,aAAc,eACdC,iBAAkB,gBAClBP,KAAM,UAER,CACEM,aAAc,gBACdC,iBAAkB,iBAClBP,KAAM,SAIZ,CACEG,SAAU,YACVC,aAAc,aACdC,OAAQ,CACN,CACEC,aAAc,SACdC,iBAAkB,kBAClBP,KAAM,SACNQ,QAAS,CAAC,OAAQ,WAEpB,CAAEF,aAAc,MAAOC,iBAAkB,WAAYP,KAAM,WAKpDS,EAAiB,CAC5B,CACEC,UAAW,YACXC,cAAe,wBACfN,OAAQ,CACN,CAAEO,IAAK,eAAgBC,YAAa,gBAAiBb,KAAM,YAG/D,CACEU,UAAW,cACXC,cAAe,eACfN,OAAQ,CACN,CAAEO,IAAK,cAAeC,YAAa,iBAAkBb,KAAM,UAC3D,CACEY,IAAK,qBACLC,YAAa,UACbb,KAAM,YACNc,OAAQ,CAAC,YAAa,gBAMjBC,EAAsB,CACjC,CAAElB,KAAM,QAASmB,MAAO,IAAKhB,KAAM,UACnC,CAAEH,KAAM,YAAamB,MAAO,KAAMhB,KAAM,UACxC,CAAEH,KAAM,WAAYmB,MAAO,WAAYhB,KAAM,UAC7C,CAAEH,KAAM,eAAgBmB,MAAO,eAAgBhB,KAAM,UACrD,CAAEH,KAAM,eAAgBmB,MAAO,IAAKhB,KAAM,OAC1C,CAAEH,KAAM,YAAamB,MAAO,IAAKhB,KAAM,OACvC,CAAEH,KAAM,yBAA0BmB,MAAO,KAAMhB,KAAM,OACrD,CAAEH,KAAM,sBAAuBmB,MAAO,KAAMhB,KAAM,OAClD,CAAEH,KAAM,QAASmB,MAAO,IAAKhB,KAAM,QACnC,CAAEH,KAAM,eAAgBmB,MAAO,eAAgBhB,KAAM,QACrD,CAAEH,KAAM,aAAcmB,MAAO,aAAchB,KAAM,U,uDC7FnD,4GAWeiB,oBAAK,YAAkC,IAAD,IAA9BrB,EAA8B,EAA9BA,GAAIsB,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cACzBC,EAAmBC,aAAc,SAAAC,GAAK,OAAIA,EAAMF,oBAEtD,OACE,sBACE/B,UAAS,6BACP+B,GAAoBA,EAAiB,GAAGxB,KAAOA,EAAK,cAAgB,IAEtEJ,QAAS,kBAAM0B,EAAKK,gBAAgB3B,IAJtC,UAME,8BACE,cAAC,IAAD,CAAYL,QAAQ,QAApB,SAA6B2B,EAAKjB,UAGrB,UAAdiB,EAAKlB,OACHkB,EAAKM,KACJ,cAAC,IAAD,CAAQjC,QAAQ,YAAYkC,UAAQ,EAACpC,UAAU,YAA/C,mBACG6B,EAAKM,YADR,aACG,EAAWpB,eAGdc,EAAKQ,UACH,cAAC,IAAD,CACElC,QAAS,SAAAmC,GACPT,EAAKU,UAAUhC,GACf+B,EAAEE,mBAEJtC,QAAQ,YALV,SAOG2B,EAAKQ,aAKE,cAAdR,EAAKlB,MAAsC,WAAdkB,EAAKlB,OAClC,qCACiB,cAAdkB,EAAKlB,MACJ,cAAC,IAAD,CACEV,eAAa,EACbD,UAAU,WACVG,QAAS,SAAAmC,GACPT,EAAKY,0BAA0BlC,GAC/B+B,EAAEE,mBALN,SAQE,cAAC,IAAD,MAGHX,EAAKM,KACJ,cAAC,IAAD,CAAQjC,QAAQ,YAAYkC,UAAQ,EAACpC,UAAU,gBAA/C,SACG0C,OAAOC,KAAKd,EAAKM,MAAM,GAAGS,SAAS,QAChCF,OAAOG,OAAOhB,EAAKM,MAAM,GACtBW,KACC,SAAAC,GAAI,gBACCA,EAAK9B,aADN,YAEA8B,EAAKC,SAFL,YAGED,EAAKpB,MAAMsB,KAAK,UAEvBA,KAPH,WAOYP,OAAOC,KAAKd,EAAKM,MAAM,GAAGe,QAAQ,OAAQ,IAPtD,MADH,UASMrB,EAAKM,KAAKlB,aAThB,YAUKY,EAAKM,KAAKa,SAVf,YAWOnB,EAAKM,KAAKR,MAAMsB,KAAK,SAG/BpB,EAAKQ,UACH,cAAC,IAAD,CACElC,QAAS,SAAAmC,GACPT,EAAKU,UAAUhC,GACf+B,EAAEE,mBAEJtC,QAAQ,YALV,SAOG2B,EAAKQ,cAQfR,EAAKlB,KAAKiC,SAAS,aACjB,UAAAf,EAAKM,YAAL,eAAWgB,QACRtB,EAAKM,KAAKW,KAAI,SAACM,EAAGC,GAAJ,OACZ,cAAC,IAAMC,SAAP,UACE,sBAAKtD,UAAU,YAAf,UACE,cAAC,IAAD,CACEE,QAAQ,YACRC,QAAS,SAAAmC,GACPT,EAAK0B,mBAAmBhD,EAAI8C,GAC5Bf,EAAEE,mBAEJxC,UAAU,aANZ,2BAQcoD,EAAE/B,UARhB,iCASI+B,EAAEI,aACDV,KAAI,SAAAW,GAAE,gBAAOA,EAAGlC,IAAV,cAAmBkC,EAAG9B,UAC5BsB,KAAK,SAEV,cAAC,IAAD,CACEhD,eAAa,EACbE,QAAS,SAAAmC,GACPT,EAAK6B,mBAAmBnD,EAAI8C,GAC5Bf,EAAEE,mBAJN,SAOE,cAAC,IAAD,MAEDa,IAAMxB,EAAKM,KAAKgB,OAAS,GACxB,cAAC,IAAD,CAAYjD,QAAQ,KAApB,qBAzBemD,MA8BvBxB,EAAKQ,UACH,cAAC,IAAD,CACElC,QAAS,SAAAmC,GACPT,EAAKU,UAAUhC,GACf+B,EAAEE,mBAEJtC,QAAQ,YALV,SAOG2B,EAAKQ,YAID,WAAdR,EAAKlB,MACJ,cAAC,IAAD,CAAYT,QAAQ,KAAKF,UAAU,UAAnC,gBAKD6B,EAAK8B,WACJ,cAAC,IAAD,CACExD,QAAS,SAAAmC,GACPT,EAAK+B,WAAWrD,GAChB+B,EAAEE,mBAEJtC,QAAQ,YALV,SAOG2B,EAAK8B,YAIV,cAAC,IAAD,CACEhD,KAAK,SACLkD,SAAS,SACTC,MAAO,CAAEC,OAAQ,GAAIC,IAAK,OAAQC,WAAY,QAC9CnC,cAAeA,W,mGC3JvB,IAAIoC,EAAyBC,EAAQ,IAEjCC,EAA0BD,EAAQ,KAEtCzB,OAAO2B,eAAeC,EAAS,aAAc,CAC3C3C,OAAO,IAET2C,EAAQC,aAAU,EAElB,IAAIC,EAAQJ,EAAwBD,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,MAElBI,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,0GACD,SAEJL,EAAQC,QAAUE,G,6PCPZG,EAAS,SAAAnF,GAAU,IACfoF,EAA4CpF,EAA5CoF,aAAcC,EAA8BrF,EAA9BqF,iBAAqBjF,EADrB,YAC8BJ,EAD9B,uCAEUsF,oBAAS,GAFnB,mBAEfC,EAFe,KAELC,EAFK,KAItB,OACE,8CAAKjF,UAAS,UAAgBH,GAA9B,cACE,cAACL,EAAA,EAAD,UACE,cAAC0F,EAAA,EAAD,CAAYhF,QAAQ,KAApB,sBAGF,6CACEF,UAAS,uBACPa,IAAsBsC,OAAS,EAAI,gBAAkB,GAD9C,YAEL6B,EAAW,WAAa,KACxBnF,GAJN,aAMGgB,IAAsBiC,KAAI,SAAAX,GAAI,OAC7B,cAACgD,EAAA,EAAD,CAEEhF,QAAS,kBAAM0E,EAAa1C,IAC5BlC,eAAa,EACbC,QAAQ,OACRF,UAAS,wBACP8E,IAAqB3C,EAAKrB,SAAW,WAAa,IAEpDsE,UAAW,cAAC,IAAD,IARb,SAUGjD,EAAKpB,cATDoB,EAAKrB,gBAcfD,IAAsBsC,OAAS,GAC9B,qBAAKnD,UAAU,gBAAf,SACE,eAACmF,EAAA,EAAD,CACEhF,QAAS,kBAAM8E,GAAaD,IAC5B9E,QAAQ,OACRD,eAAa,EACboF,QACEL,EACE,cAAC,IAAD,IAEA,cAAC,IAAD,IARN,kBAYQA,EAAW,OAAS,iB,mHCuClCM,EAAsC,qBAAXC,OAAyBf,YAAkBA,kBAKtEgB,EAAwBhB,cAAiB,SAAkB/E,EAAOgG,GACpE,IAAIC,EAAoBjG,EAAMkG,WAC1BA,OAAmC,IAAtBD,EAA+B,SAAWA,EACvDE,EAAmBnG,EAAMoG,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAgBrG,EAAMsG,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAevG,EAAMG,SACrBqG,EAAUxG,EAAMwG,QAChBjG,EAAYP,EAAMO,UAClBkG,EAAgBzG,EAAM0G,UACtBC,EAAwB3G,EAAM4G,mBAC9BA,OAA+C,IAA1BD,EAAmC,KAAOA,EAC/DE,EAAwB7G,EAAM8G,eAG9BC,GAFJF,OAAkD,IAA1BA,EAAmC,GAAKA,GAEjBtG,UAC3CuG,EAAiBE,YAAyBH,EAAuB,CAAC,cAClEI,EAAejH,EAAMkH,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkBnH,EAAM2C,SACxBA,OAA+B,IAApBwE,GAAqCA,EAChDC,EAAwBpH,EAAMqH,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAiBtH,EAAMuH,QACvBA,OAA6B,IAAnBD,GAAoCA,EAC9CE,EAAwBxH,EAAMwH,sBAC9BC,EAAkBzH,EAAM0H,SACxBA,OAA+B,IAApBD,GAAqCA,EAChDE,EAAQX,YAAyBhH,EAAO,CAAC,aAAc,YAAa,SAAU,WAAY,UAAW,YAAa,YAAa,qBAAsB,iBAAkB,QAAS,WAAY,iBAAkB,UAAW,wBAAyB,aAElP4H,EAAU7C,aAAiB8C,KAC3BC,EAAe,CACjBZ,MAAOA,GAASU,EAAQV,QAAS,EACjChB,WAAYA,GAEV6B,EAAchD,SAAa,MAC/Bc,GAAkB,WACZO,GACE2B,EAAYC,SACdD,EAAYC,QAAQC,UAKvB,CAAC7B,IACJ,IAAIjG,EAAW4E,WAAemD,QAAQ3B,GAClC4B,EAAqBhI,EAASuD,QAAU0E,YAAajI,EAASA,EAASuD,OAAS,GAAI,CAAC,4BACrF2E,EAAetD,eAAkB,SAAUuD,GAE7CP,EAAYC,QAAUO,cAAqBD,KAC1C,IACCE,EAAYC,YAAWJ,EAAcrC,GAErC0C,EAAiBC,YAAS,CAC5BpI,UAAWqI,YAAKpC,EAAQqC,KAAMtI,EAAWuH,EAAaZ,OAASV,EAAQU,OAAQG,GAAkBb,EAAQsC,QAASvB,GAAWf,EAAQe,QAAS5E,GAAY6D,EAAQ7D,SAAU2D,GAAUE,EAAQF,OAAuB,WAAfJ,GAA2BM,EAAQuC,oBAAqBZ,GAAsB3B,EAAQwC,gBAAiBtB,GAAYlB,EAAQkB,UACjU/E,SAAUA,GACTgF,GAECsB,EAAYxC,GAAiB,KAQjC,OANIH,IACFoC,EAAehC,UAAYD,GAAiB,MAC5CiC,EAAelB,sBAAwBoB,YAAKpC,EAAQ0C,aAAc1B,GAClEyB,EAAYE,KAGVhB,GAEFc,EAAaP,EAAehC,WAAcD,EAAwBwC,EAAR,MAE/B,OAAvBrC,IACgB,OAAdqC,EACFA,EAAY,MAC0B,OAA7BP,EAAehC,YACxBgC,EAAehC,UAAY,QAIX3B,gBAAoB8C,IAAYuB,SAAU,CAC5DlH,MAAO4F,GACO/C,gBAAoB6B,EAAoB+B,YAAS,CAC/DpI,UAAWqI,YAAKpC,EAAQ6C,UAAWtC,GACnCf,IAAKwC,GACJ1B,GAA8B/B,gBAAoBkE,EAAWP,EAAgBvI,GAAWA,EAASmJ,SAGlFvE,gBAAoB8C,IAAYuB,SAAU,CAC5DlH,MAAO4F,GACO/C,gBAAoBkE,EAAWN,YAAS,CACtD3C,IAAKwC,GACJE,GAAiBvI,OA0GPoJ,eA/RK,SAAgBC,GAClC,MAAO,CAELX,KAAM,CACJY,QAAS,OACTC,eAAgB,aAChBxD,WAAY,SACZ9B,SAAU,WACVuF,eAAgB,OAChBC,MAAO,OACPC,UAAW,aACXC,UAAW,OACXC,WAAY,EACZC,cAAe,EACf,iBAAkB,CAChBC,gBAAiBT,EAAMU,QAAQC,OAAOzC,UAExC,+BAAgC,CAC9BuC,gBAAiBT,EAAMU,QAAQC,OAAOzC,UAExC,aAAc,CACZ0C,QAAS,KAKbf,UAAW,CACTjF,SAAU,YAIZ8E,aAAc,GAGdhC,MAAO,CACL6C,WAAY,EACZC,cAAe,GAIjBjB,oBAAqB,CACnB7C,WAAY,cAIdvD,SAAU,GAGV4E,QAAS,CACP8C,aAAc,aAAaC,OAAOd,EAAMU,QAAQ3C,SAChDgD,eAAgB,eAIlBzB,QAAS,CACP0B,YAAa,GACbC,aAAc,IAIhBnE,OAAQ,CACNoE,WAAYlB,EAAMmB,YAAYC,OAAO,mBAAoB,CACvDC,SAAUrB,EAAMmB,YAAYE,SAASC,WAEvC,UAAW,CACTnB,eAAgB,OAChBM,gBAAiBT,EAAMU,QAAQC,OAAOY,MAEtC,uBAAwB,CACtBd,gBAAiB,iBAMvBjB,gBAAiB,CAGfyB,aAAc,IAIhB/C,SAAU,MA6MoB,CAChC3G,KAAM,eADOwI,CAEZxD,GCzQCiF,EAAwBjG,cAAiB,SAAkB/E,EAAOgG,GACpE,IAaIiF,EAbAzE,EAAUxG,EAAMwG,QAChBjG,EAAYP,EAAMO,UAClB2K,EAAmBlL,EAAM0G,UACzBA,OAAiC,IAArBwE,EAA8B,KAAOA,EACjD9D,EAAwBpH,EAAMqH,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5D+D,EAAkBnL,EAAMmL,gBACxBC,EAAcpL,EAAMqL,KACpBA,OAAuB,IAAhBD,EAAyB,WAAaA,EAC7C1D,EAAW1H,EAAM0H,SACjB4D,EAAetL,EAAMiL,SACrBtD,EAAQX,YAAyBhH,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,kBAAmB,OAAQ,WAAY,aAQ3I,OAJKA,EAAM2C,WACTsI,OAA4BM,IAAjBD,EAA6BA,GAAgB,GAGtCvG,gBAAoBgB,EAAU4C,YAAS,CACzDrC,QAAQ,EACR+E,KAAMA,EACNJ,SAAUA,EACVvE,UAAWA,EACXgB,SAAUA,EACVL,eAAgBA,EAChBb,QAASmC,YAAS,CAChBzB,MAAOV,EAAQU,OACdiE,GACH5K,UAAWqI,YAAKpC,EAAQqC,KAAMtI,EAAWmH,GAAYlB,EAAQkB,UAAWL,GAAkBb,EAAQsC,SAClG9C,IAAKA,GACJ2B,OA8DU4B,eA1HK,SAAgBC,GAClC,MAAO,CAELX,KAAMF,YAAS,GAAIa,EAAMgC,WAAWC,MAAOC,YAAgB,CACzDC,UAAW,GACX5B,WAAY,EACZC,cAAe,EACfH,UAAW,aACXD,MAAO,OACPgC,SAAU,SACVC,WAAY,UACXrC,EAAMsC,YAAYC,GAAG,MAAO,CAC7BJ,UAAW,UAKb7C,QAAS,GAGTpB,SAAU,GAGVR,MAAOyB,YAAS,GAAIa,EAAMgC,WAAWQ,MAAO,CAC1CL,UAAW,YAkGiB,CAChC5K,KAAM,eADOwI,CAEZyB,G,6CChHGiB,G,OAAa,SAAAjM,GAAU,IACnBqF,EACNrF,EADMqF,iBAAkB6G,EACxBlM,EADwBkM,qBAAsB9G,EAC9CpF,EAD8CoF,aAAiBhF,EADvC,YAExBJ,EAFwB,4DAI1BmM,qBAAU,WAAO,IAAD,IACdC,GACE,UAAAnJ,OAAOC,KAAKgJ,GAAsB,UAAlC,eAAsC/I,SAAS,SAC3CF,OAAOG,OAAO8I,GAAsB,GACpC,CACE,CACE1K,aAAc0K,EAAqB1K,cAAgB,GACnDU,MAAOgK,EAAqBhK,OAAS,GACrCqB,SAAU2I,EAAqB3I,UAAY,MAIrD8I,GACE,UAAApJ,OAAOC,KAAKgJ,GAAsB,UAAlC,eAAsC/I,SAAS,SAC3CF,OAAOC,KAAKgJ,GAAsB,GAClC,MAEL,CAACA,IAEJ,IAAMI,EAAsB,CAC1B9K,aAAc,GACdU,MAAO,GACPqB,SAAU,IAGNgJ,EAAsBnL,IAAsBoL,MAChD,SAAAC,GAAC,OAAIA,EAAEpL,WAAagE,KACpB9D,OA/BwB,EAiCM+D,mBAAS,IAjCf,mBAiCnBoH,EAjCmB,KAiCTL,EAjCS,OAkCU/G,mBAAS,CAC3C,CACE9D,aAAc,GACdU,MAAO,GACPqB,SAAU,MAtCY,mBAkCnBoJ,EAlCmB,KAkCPP,EAlCO,KA+DpBQ,EAAiB,SAAC1K,EAAO2K,EAAOC,GACpC,IAAMC,EAAiB9J,OAAO+J,OAAO,GAAIL,GACzB,UAAZG,EACFC,EAAeF,GAAO3K,MAAQA,EAAM+K,MAAM,KAE1CF,EAAeF,GAAOC,GAAW5K,EAEnCkK,EAAcW,IAGhB,OACE,8CAAKxM,UAAS,cAAoBH,GAAlC,cACE,cAACL,EAAA,EAAD,UACE,cAAC0F,EAAA,EAAD,CAAYhF,QAAQ,KAApB,0BAGF,8CAAKF,UAAS,gBAAsBH,GAApC,cACGuM,EAAWjJ,OAAS,GACnB,eAACwJ,EAAA,EAAD,CAAa3M,UAAU,SAAvB,UACE,cAAC4M,EAAA,EAAD,CAAYrM,GAAE,kBAAd,sCAGA,eAACsM,EAAA,EAAD,CACEC,QAAO,kBACPvM,GAAG,YACHoB,MAAOwK,EACPY,SAAU,SAAAzK,GAAC,OAAIwJ,EAAYxJ,EAAE0K,OAAOrL,QAJtC,UAME,cAAC,EAAD,CAAUA,MAAM,UAAhB,iBACA,cAAC,EAAD,CAAUA,MAAM,SAAhB,sBAKLyK,EAAWtJ,KAAI,SAACmK,EAAG5J,GAAJ,eACd,eAAC,IAAMC,SAAP,WACS,IAAND,GACC,cAAC8B,EAAA,EAAD,CACEnF,UAAU,YACVE,QAAQ,OACRkF,UAAW,cAAC,IAAD,IACXnF,eAAa,EACbE,QAAS,kBAnDA,SAAAmM,GACK,IAAtBF,EAAWjJ,QACb2I,EAAY,IAEd,IAAMU,EAAiB9J,OAAO+J,OAAO,GAAIL,GACzCI,EAAeU,OAAOZ,EAAO,GAC7BT,EAAcW,GA6CaW,CAAe9J,IALhC,oBAUF,eAACsJ,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAYrM,GAAE,0BAAqB8C,GAAnC,uBACaA,EAAI,KAEjB,cAACwJ,EAAA,EAAD,CACEC,QAAO,0BAAqBzJ,GAC5B9C,GAAE,oBAAe8C,GACjB1B,MAAOsL,EAAEhM,cAAgB,GACzB8L,SAAU,SAAAzK,GAAC,OACT+J,EAAe/J,EAAE0K,OAAOrL,MAAO0B,EAAG,iBALtC,SAQG2I,EAAoBlJ,KAAI,SAAAX,GAAI,OAC3B,cAAC,EAAD,CAAkCR,MAAOQ,EAAKlB,aAA9C,SACGkB,EAAKjB,kBADOiB,EAAKlB,sBAO1B,eAAC0L,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAYrM,GAAE,yBAAoB8C,GAAlC,sBACYA,EAAI,KAEhB,cAACwJ,EAAA,EAAD,CACEC,QAAO,yBAAoBzJ,GAC3B9C,GAAE,mBAAc8C,GAChB1B,MAAOsL,EAAEjK,UAAY,GACrB+J,SAAU,SAAAzK,GAAC,OAAI+J,EAAe/J,EAAE0K,OAAOrL,MAAO0B,EAAG,aAJnD,SAQc,YAFX,UAAA2I,EAAoBC,MACnB,SAAAmB,GAAC,OAAIA,EAAEnM,eAAiBgM,EAAEhM,uBAD3B,eAEEN,MACCqL,EACGC,MAAK,SAAAmB,GAAC,OAAIA,EAAEnM,eAAiBgM,EAAEhM,gBAC/BE,QAAQ2B,KAAI,SAAArB,GAAM,OACjB,cAAC,EAAD,CAAuBE,MAAOF,EAA9B,SACGA,GADYA,MANtB,UAUGC,IAAoB2L,QAClB,SAAAC,GAAC,aACCA,EAAE3M,QAAF,UACAqL,EAAoBC,MAClB,SAAAmB,GAAC,OAAIA,EAAEnM,eAAiBgM,EAAEhM,uBAF5B,aACA,EAEGN,gBAfV,aAUG,EAMGmC,KAAI,SAAAE,GAAQ,OACb,cAAC,EAAD,CAA+BrB,MAAOqB,EAASrB,MAA/C,SACGqB,EAASxC,MADGwC,EAASrB,eAOlC,eAACgL,EAAA,EAAD,WACE,cAACY,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPV,SAAU,SAAAzK,GAAC,OAAI+J,EAAe/J,EAAE0K,OAAOrL,MAAO0B,EAAG,UACjD1C,KAAM,OACNgB,MAAOsL,EAAEtL,MAAMsB,KAAK,MAAQ,GAC5BrC,MAAK,gBAAWyC,EAAI,KAEtB,cAACqK,EAAA,EAAD,0DAKDtB,EAAWjJ,OAAS,IAAME,GACzB,cAAC6B,EAAA,EAAD,CAAYhF,QAAQ,KAAKF,UAAU,sBAAnC,SACgB,YAAbmM,EAAyB,MAAQ,SAlFnB9I,MAwFvB,cAAC8B,EAAA,EAAD,CACEjF,QAAQ,OACRkF,UAAW,cAAC,IAAD,IACXnF,eAAa,EACbD,UAAU,UACVG,QArJY,WACbgM,GACHL,EAAY,WAEdD,EAAc,GAAD,mBAAKO,GAAL,CAAiBL,MA4I1B,2BASA,cAAC5G,EAAA,EAAD,CAAQjF,QAAQ,YAAYD,eAAa,EAACE,QAlJ3B,WACnB,IAAMwN,EAASxB,EAAQ,eAAMA,EAAWC,GAAeA,EAAW,GAClEvH,EAAa8I,IAgJT,sCCtMFC,G,OAAU,SAAAnO,GAAU,IAEtBoF,EAKEpF,EALFoF,aAGAgJ,GAEEpO,EAJFqO,gBAIErO,EAHFsO,WAGEtO,EAFFoO,mBACGhO,EANkB,YAOnBJ,EAPmB,qEASvBmM,qBAAU,WACJlJ,OAAOC,KAAKkL,GAAmB1K,OACjC6K,EAAiBC,EAAmBJ,IAEpCG,EAAiB,MAElB,CAACH,IAEJ,IAAMI,EAAqB,SAAAC,GAAe,IAAD,EACjCC,EAAazL,OAAO+J,OACxB,GACArL,IAAe6K,MAAK,SAAAmB,GAAC,OAAIA,EAAE/L,YAAc6M,EAAW7M,cAOtD,OALA,UAAA8M,EAAWnN,cAAX,SAAmBoN,SAAQ,SAAAhB,GAAM,IAAD,EAC9BA,EAAEzL,MAAF,UAAUuM,EAAW1K,aAAayI,MAChC,SAAAoC,GAAK,OAAIA,EAAM9M,MAAQ6L,EAAE7L,cAD3B,aAAU,EAEPI,SAEEwM,GA3Bc,EA8BmBpJ,mBAAS,IA9B5B,mBA8BhBuJ,EA9BgB,KA8BDN,EA9BC,OA+BSjJ,oBAAS,GA/BlB,mBA+BhBC,EA/BgB,KA+BNC,EA/BM,KAmDjBsJ,EAAyB,SAACjM,EAAGkM,GACjC,IAAMC,EAAoB/L,OAAO+J,OAAO,GAAI6B,GACtCI,EAAaJ,EAActN,OAAO2N,WAAU,SAAAvB,GAAC,OAAIA,EAAE7L,MAAQiN,EAAMjN,OACvEkN,EAAkBzN,OAAO0N,GAAY/M,MAAQW,EAAE0K,OAAOrL,MACtDqM,EAAiBS,IAGnB,OACE,qCACE,8CAAKzO,UAAS,WAAiBH,GAA/B,cACE,cAACL,EAAA,EAAD,UACE,cAAC0F,EAAA,EAAD,CAAYhF,QAAQ,KAApB,uBAGF,6CACEF,UAAS,uBACPoB,IAAe+B,OAAS,EAAI,gBAAkB,GADvC,YAEL6B,EAAW,WAAa,KACxBnF,GAJN,aAMGuB,IAAe0B,KAAI,SAAAX,GAAI,OACtB,cAACgD,EAAA,EAAD,CAEEhF,QAAS,WAxCnB6N,EAwC6C7L,IACnClC,eAAa,EACbC,QAAQ,OACRF,UAAS,yBACM,OAAbsO,QAAa,IAAbA,OAAA,EAAAA,EAAejN,aAAcc,EAAKd,UAAY,WAAa,IAE7D+D,UAAW,cAAC,IAAD,IARb,SAUGjD,EAAKb,eATDa,EAAKd,iBAcfD,IAAe+B,OAAS,GACvB,qBAAKnD,UAAU,gBAAf,SACE,eAACmF,EAAA,EAAD,CACEhF,QAAS,kBAAM8E,GAAaD,IAC5B9E,QAAQ,OACRD,eAAa,EACboF,QACEL,EACE,cAAC,IAAD,IAEA,cAAC,IAAD,IARN,kBAYQA,EAAW,OAAS,gBAMjCtC,OAAOC,KAAK2L,GAAenL,OAAS,GACnC,qCACE,cAAC3D,EAAA,EAAD,UACE,cAAC0F,EAAA,EAAD,CAAYhF,QAAQ,KAApB,8BAEF,sBAAKF,UAAU,YAAf,UACGsO,EAActN,OAAO8B,KAAI,SAAA0L,GAAK,MACd,cAAfA,EAAM7N,KACJ,eAACgM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYrM,GAAE,gBAAWiO,EAAMjN,KAA/B,SACGiN,EAAMhN,cAET,cAACqL,EAAA,EAAD,CACEC,QAAO,gBAAW0B,EAAMjN,KACxBhB,GAAIiO,EAAMjN,IACVI,MAAO6M,EAAM7M,OAAS,GACtBoL,SAAU,SAAAzK,GAAC,OAAIiM,EAAuBjM,EAAGkM,IAJ3C,SAMGA,EAAM/M,OAAOqB,KAAI,SAAA8L,GAAG,OACnB,cAAC,EAAD,CAAoBjN,MAAOiN,EAA3B,SACGA,GADYA,UAXHJ,EAAMjN,KAkBxB,cAACgM,EAAA,EAAD,CAEEC,WAAS,EACTC,OAAO,QACPV,SAAU,SAAAzK,GAAC,OAAIiM,EAAuBjM,EAAGkM,IACzC7N,KAAM,OACNgB,MAAO6M,EAAM7M,OAAS,GACtBf,MAAO4N,EAAMhN,YACbqN,YAAaL,EAAMhN,aAPdgN,EAAMjN,QAWjB,cAAC4D,EAAA,EAAD,CAAQjF,QAAQ,OAAOD,eAAa,EAACE,QA5GnB,WAC1B,IAAMwN,EAAS,CACbtM,UAAWiN,EAAcjN,UACzBmC,aAAc8K,EAActN,OAAO8B,KAAI,SAAAsK,GAAC,MAAK,CAC3C7L,IAAK6L,EAAE7L,IACPI,MAAOyL,EAAEzL,WAGbkD,EACE8I,EACAjL,OAAOC,KAAKkL,GAAmB1K,OAAS,SAAW,QAkG7C,SACGT,OAAOC,KAAKkL,GAAmB1K,OAAS,SAAW,mB,iBCtJ5D2L,G,OAAY,CAChBC,gBAAiBC,MAkdJC,UA/cf,WAAqB,IAAD,cACMlK,mBAAS,IADf,mBACXmK,EADW,KACLC,EADK,OAEkBpK,mBAAS,UAF3B,mBAEXqK,EAFW,KAECC,EAFD,OAGsBtK,mBAAS,KAH/B,mBAGXuK,EAHW,KAGGC,EAHH,OAIoCxK,mBAAS,MAJ7C,mBAIXyK,EAJW,KAIUC,EAJV,KAMZC,EAAkB,CACtB,CACEnP,GAAI,IACJI,KAAM,kBACNkB,KAAM,CACJjB,MAAO,OACPD,KAAM,QACN0B,SAAU,uBACVH,gBAAiB,SAAA3B,GACf8O,EAAc,UACdE,EAAgBhP,IAElBgC,UAAW,SAAAhC,GACT8O,EAAc,UACdE,EAAgBhP,KAGpBsD,SAAU,CAAE8L,EAAG,IAAKC,EAAG,MAvBT,EA2Bc7K,mBAAS2K,GA3BvB,mBA2BXG,EA3BW,KA2BDC,EA3BC,KA+BZC,EAAmBC,mBACzBD,EAAiBtI,QAAUoI,EAC3B,IAAMI,EAAuBD,mBAC7BC,EAAqBxI,QAAU6H,EACLU,mBACRvI,QAAU+H,EAE5B,IAAMU,EAA0B,SAA1BA,EAA2BC,EAAQtM,GACvC,MAAO,CACLjD,MAAM,YACND,KAAM,SACN0B,SAAU,gBACVH,gBAAiB,SAAA3B,GACf8O,EAAc,MACdE,EAAgBhP,IAElBgC,UAAW,SAAAhC,GAAO,IAAD,EACf8O,EAAc,cACdE,EAAgBhP,GAEhB,IAAI6P,EAAY1N,OAAO+J,OAAO,GAAIsD,EAAiBtI,UAMnD,EALA2I,EAAYA,EAAU/C,QACpB,SAAAnB,GAAC,OACCA,EAAE3L,KAAO4P,GACTjE,EAAE3L,KAAF,iBAAmB8P,OAAOF,GAAU,GAAGG,WAAvC,YAAqDH,OAE/C/P,KAAV,SACE,CACEG,GAAI4P,EACJxP,KAAM,kBACNkB,KAAM,CACJjB,MAAM,QACND,KAAM,YACN0B,SAAU,gBACVH,gBAAiB,SAAA3B,GACf8O,EAAc,cACdE,EAAgBhP,IAElBkC,0BAA2B,SAAAlC,GAAE,OAAIkC,EAA0BlC,IAC3DgC,UAAW,SAAAhC,GACT8O,EAAc,cACdE,EAAgBhP,KAGpBsD,SAAUA,GAEZ,CACEtD,IAAK8P,OAAOF,GAAU,GAAGG,WACzB3P,KAAM,kBACNkB,KAAM,CACJjB,MAAM,UACND,KAAM,aACN0B,SAAU,aACVH,gBAAiB,SAAA3B,GACf8O,EAAc,WACdI,EAAuB,MACvBF,EAAgBhP,IAElBgC,UAAW,SAAAhC,GACT8O,EAAc,WACdE,EAAgBhP,IAElBgD,mBAAoB,SAAChD,EAAIgQ,GACvBlB,EAAc,WACdE,EAAgBhP,GAChBgD,EAAmBgN,IAErB7M,mBAAoB,SAACnD,EAAIgQ,GACvBhB,EAAgBhP,GAChBmD,EAAmB6M,KAGvB1M,SAAU,CAAE8L,EAAG9L,EAAS8L,EAAGC,EAAG/L,EAAS+L,EAAI,MAE7C,CACErP,IAAK8P,OAAOF,GAAU,GAAGG,WACzB3P,KAAM,kBACNkB,KAAMqO,GAAyBG,OAAOF,GAAU,GAAGG,WAAY,CAC7DX,EAAG9L,EAAS8L,EAAI,IAChBC,EAAG/L,EAAS+L,EAAI,MAElB/L,SAAU,CAAE8L,EAAG9L,EAAS8L,EAAI,IAAKC,EAAG/L,EAAS+L,EAAI,OAvDrD,mBAyDiB,MAAXO,EACA,CACE,CACE5P,GAAG,SAAD,QAAY8P,OAAOF,GAAU,GAAGG,WAAhC,YAA8CH,GAChDK,QAASH,OAAOF,GAAU,GAAGG,WAC7BtD,OAAQmD,EACRxP,KAAM,eAGV,IAlEN,CAmEE,CACEJ,GAAG,SAAD,OAAW4P,EAAX,aAAsBE,OAAOF,GAAU,GAAGG,YAC5CE,OAAQL,EACRnD,QAASqD,OAAOF,GAAU,GAAGG,WAC7B3P,KAAM,aACNC,MAAO,OAET,CACEL,GAAG,SAAD,OAAW4P,EAAX,aAAsBE,OAAOF,GAAU,GAAGG,YAC5CE,OAAQL,EACRnD,QAASqD,OAAOF,GAAU,GAAGG,WAC7B3P,KAAM,aACNC,MAAO,SAGXkP,EAAYM,IAEdzM,UAAW,aACXC,WAAY,SAAArD,GAAO,IAAD,EAChB8O,EAAc,WACdE,EAAgBhP,GAEhB,IAAI6P,EAAY1N,OAAO+J,OAAO,GAAIsD,EAAiBtI,UAMnD,EALA2I,EAAYA,EAAU/C,QACpB,SAAAnB,GAAC,OACCA,EAAE3L,KAAO4P,GACTjE,EAAE3L,KAAF,iBAAmB8P,OAAOF,GAAU,GAAGG,WAAvC,YAAqDH,OAE/C/P,KAAV,SACE,CACEG,GAAI4P,EACJxP,KAAM,kBACNkB,KAAM,CACJjB,MAAM,UACND,KAAM,SACN0B,SAAU,aACVH,gBAAiB,SAAA3B,GACf8O,EAAc,WACdI,EAAuB,MACvBF,EAAgBhP,IAElBgC,UAAW,SAAAhC,GACT8O,EAAc,WACdE,EAAgBhP,IAElBgD,mBAAoB,SAAChD,EAAIgQ,GACvBlB,EAAc,WACdE,EAAgBhP,GAChBgD,EAAmBgN,IAErB7M,mBAAoB,SAACnD,EAAIgQ,GACvBhB,EAAgBhP,GAChBmD,EAAmB6M,KAGvB1M,SAAUA,IA3Bd,mBA6BiB,MAAXsM,EACA,CACE,CACE5P,GAAG,SAAD,QAAY8P,OAAOF,GAAU,GAAGG,WAAhC,YAA8CH,GAChDK,QAASH,OAAOF,GAAU,GAAGG,WAC7BtD,OAAQmD,EACRxP,KAAM,eAGV,MAGNmP,EAAYM,MA0FZ7M,EAAqB,SAAAgN,GACzBd,EAAuBc,IAGnB7M,EAAqB,SAAA6M,GAAc,IAAD,MAClCH,EAAY1N,OAAO+J,OAAO,GAAIsD,EAAiBtI,SAC/CgJ,EAAgBL,EAAUzB,WAC5B,SAAAzC,GAAC,OAAIA,EAAE3L,KAAO0P,EAAqBxI,WAErC2I,EAAUK,GAAV,2BACKL,EAAUK,IADf,IAEE5O,KAAK,2BAAD,QAAC,EACAuO,EAAUK,UADX,aACC,EAA0B5O,MAD3B,IAEFM,OAAO,UAAAiO,EAAUK,UAAV,mBAA0B5O,YAA1B,eAAgCM,OAAQ,IAAIkL,QACjD,SAACsC,EAAGtM,GAAJ,OAAUA,IAAMkN,SAItBT,EAAYM,GACZf,EAAc,OAGV5M,EAA4B,SAAA0N,GAChC,IAAMO,EAAehO,OAAO+J,OAAO,GAAIsD,EAAiBtI,SAClDkJ,EAAeD,EAAa/B,WAChC,SAAAiC,GAAE,OAAIA,EAAGJ,SAAWL,GAAuB,QAAbS,EAAGhQ,SAE7BiQ,EAAcH,EAAa/B,WAC/B,SAAAiC,GAAE,OAAIA,EAAGJ,SAAWL,GAAuB,OAAbS,EAAGhQ,SAEnC8P,EAAaC,GAAc/P,MACY,QAArC8P,EAAaC,GAAc/P,MAAkB,KAAO,MACtD8P,EAAaG,GAAajQ,MACY,QAApC8P,EAAaG,GAAajQ,MAAkB,KAAO,MACrDkP,EAAYY,IAGRI,EAAmB,SAAnBA,EAAoBV,EAAWD,GAAY,IAAD,MAgBvC,EAfHY,EAAM,CACR,SAAU,CAAC,WAACX,EAAUnE,MAAK,SAAA2E,GAAE,OAAIA,EAAGrQ,KAAO4P,KAAQtO,YAAxC,aAAC,EAA6CM,QAQrD6O,GALNZ,EAAYA,EAAU/C,QACpB,SAAAuD,GAAE,OAAIA,EAAG5D,SAAWmD,GAAUS,EAAGrQ,KAAO4P,MAIdlE,MAC1B,SAAA2E,GAAE,OAAIA,EAAGJ,SAAWL,GAAuB,QAAbS,EAAGhQ,SACjCoM,OAC2D,eAAzD,UAAAoD,EAAUnE,MAAK,SAAA2E,GAAE,OAAIA,EAAGrQ,KAAOyQ,KAAWnP,YAA1C,eAAgDlB,MAElDoQ,EAAI,UAAU3Q,KAAK,CAAC0Q,EAAiBV,EAAWD,KAEhDY,EAAI,UAAU3Q,KAAd,UAAmBgQ,EAAUnE,MAAK,SAAA2E,GAAE,OAAIA,EAAGrQ,KAAOyQ,KAAWnP,YAA7D,aAAmB,EAAgDM,MAOrE,IAMO,EAND8O,GALNb,EAAYA,EAAU/C,QACpB,SAAAuD,GAAE,OAAIA,EAAG5D,SAAWgE,GAAaJ,EAAGrQ,KAAOyQ,MAIlB/E,MACzB,SAAA2E,GAAE,OAAIA,EAAGJ,SAAWL,GAAuB,OAAbS,EAAGhQ,SACjCoM,OAC0D,eAAxD,UAAAoD,EAAUnE,MAAK,SAAA2E,GAAE,OAAIA,EAAGrQ,KAAO0Q,KAAUpP,YAAzC,eAA+ClB,MAEjDoQ,EAAI,UAAU3Q,KAAK,CAAC0Q,EAAiBV,EAAWa,KAEhDF,EAAI,UAAU3Q,KAAd,UAAmBgQ,EAAUnE,MAAK,SAAA2E,GAAE,OAAIA,EAAGrQ,KAAO0Q,KAAUpP,YAA5D,aAAmB,EAA+CM,MAMpE,OAJAiO,EAAYA,EAAU/C,QACpB,SAAAuD,GAAE,OAAIA,EAAG5D,SAAWiE,GAAYL,EAAGrQ,KAAO0Q,KAGrCF,GA6CT,OACE,eAACG,EAAA,EAAD,CAAYC,YAAU,EAACC,MAAM,mBAA7B,UACGhC,GACC,sBAAKpP,UAAU,SAAf,UACkB,WAAfoP,GACC,cAAC,EAAD,CACEtK,iBAAkBoK,EAAKpO,SACvB+D,aAnNc,SAAAwM,GACxBlC,EAAQ,2BAAKD,GAAN,IAAYpO,SAAUuQ,EAAMvQ,YACnC,IAAIsP,EAAY1N,OAAO+J,OAAO,GAAIsD,EAAiBtI,SACnD2I,EAAU,GAAK,CACb7P,GAAI,IACJI,KAAM,kBACNkB,KAAM,CACJjB,MAAO,OACPD,KAAM,QACNwB,KAAMkP,EACNnP,gBAAiB,SAAA3B,GACf8O,EAAc,UACdE,EAAgBhP,IAElBgC,UAAW,SAAAhC,GACT8O,EAAc,UACdE,EAAgBhP,KAGpBsD,SAAU,CAAE8L,EAAG,IAAKC,EAAG,KAGA,IAArBQ,EAAUjN,QACZiN,EAAUhQ,KACR,CACEG,GAAI,IACJI,KAAM,kBACNkB,KAAMqO,EAAwB,IAAK,CAAEP,EAAG,IAAKC,EAAG,MAChD/L,SAAU,CAAE8L,EAAG,IAAKC,EAAG,MAEzB,CACErP,GAAI,YACJiQ,OAAQ,IACRxD,OAAQ,IACRrM,KAAM,eAIZ0O,EAAc,MACdS,EAAYM,MAgLU,eAAfhB,GACC,cAAC,EAAD,CACEtK,iBAAkBoK,EAAKpO,SACvB6K,sBACE,UAAAoE,EAAiBtI,QAAQwE,MACvB,SAAA2E,GAAE,OAAIA,EAAGrQ,KAAO0P,EAAqBxI,kBADvC,mBAEG5F,YAFH,eAESM,OAAQ,GAEnB0C,aArLkB,SAAAyM,GAAiB,IAAD,EACxClB,EAAY1N,OAAO+J,OAAO,GAAIsD,EAAiBtI,SAC/CgJ,EAAgBL,EAAUzB,WAC5B,SAAAzC,GAAC,OAAIA,EAAE3L,KAAO0P,EAAqBxI,WAErC2I,EAAUK,GAAV,2BACKL,EAAUK,IADf,IAEE5O,KAAK,2BAAD,QAAC,EACAuO,EAAUK,UADX,aACC,EAA0B5O,MAD3B,IAEFM,KAAMmP,MAGVxB,EAAYM,MA6KU,YAAfhB,GACC,cAAC,EAAD,CACErB,YACE,UAAAgC,EAAiBtI,QAAQwE,MACvB,SAAA2E,GAAE,OAAIA,EAAGrQ,KAAO0P,EAAqBxI,kBADvC,mBAEG5F,YAFH,eAESM,OAAQ,GAEnB0L,oBACG,UAAAkC,EAAiBtI,QAAQwE,MACxB,SAAA2E,GAAE,OAAIA,EAAGrQ,KAAO0P,EAAqBxI,kBADtC,mBAEE5F,YAFF,eAEQM,OAAQ,IAAIqN,IAAwB,GAE/C3K,aArLe,SAAC0M,EAAW5Q,GAAU,IAAD,cAC1CyP,EAAY1N,OAAO+J,OAAO,GAAIsD,EAAiBtI,SAC/CgJ,EAAgBL,EAAUzB,WAC5B,SAAAzC,GAAC,OAAIA,EAAE3L,KAAO0P,EAAqBxI,WAErC2I,EAAUK,GAAV,2BACKL,EAAUK,IADf,IAEE5O,KAAK,2BAAD,QAAC,EACAuO,EAAUK,UADX,aACC,EAA0B5O,MAD3B,IAEFM,KACW,WAATxB,EAAA,gCAESyP,EAAUK,UAFnB,iBAES,EAA0B5O,YAFnC,aAES,EAAgCM,KAAKqP,MACtC,EACAhC,IAJR,CAMM+B,GANN,sBAOSnB,EAAUK,UAPnB,iBAOS,EAA0B5O,YAPnC,aAOS,EAAgCM,KAAKqP,MACtChC,EAAsB,KAR9B,uBAWS,UAAAY,EAAUK,UAAV,mBAA0B5O,YAA1B,eAAgCM,OAAQ,IAXjD,CAWsDoP,QAG5DzB,EAAYM,SAmKV,sBAAKpQ,UAAU,eAAf,UACE,cAACR,EAAA,EAAD,CAAYE,WApFC,WAQjB,IAPA,IAAI0Q,EAAY1N,OAAO+J,OAAO,GAAIoD,GAC5B4B,EAAS,CACb3Q,SAAU,GACVsL,WAAY,IAGV/I,EAAI,EAPe,uBASjB8M,EAASC,EAAU/M,GAAG9C,GAC1B,GAAgC,WAA5B,UAAA6P,EAAU/M,GAAGxB,YAAb,eAAmBlB,MAAkB,CAAC,IAAD,IACvC8Q,EAAO3Q,SAAP,UAAkBsP,EAAU/M,GAAGxB,YAA/B,iBAAkB,EAAmBM,YAArC,aAAkB,EAAyBrB,SAC3CsP,EAAUlD,OAAO7J,EAAG,OACf,IAAgC,eAA5B,UAAA+M,EAAU/M,GAAGxB,YAAb,eAAmBlB,MAE5B,OADA8Q,EAAOrF,WAAWhM,KAAK0Q,EAAiBV,EAAWD,IACnD,QAIC,IAAD,EAFiE,IAAjEC,EAAU/C,QAAO,SAAAuD,GAAE,MAAgB,oBAAZA,EAAGjQ,QAA4BwC,QAC1B,YAA5B,UAAAiN,EAAU/M,GAAGxB,YAAb,eAAmBlB,OAEnB8Q,EAAOrF,WAAWhM,KAAK,CACrB,SAAU,CAAC,CAAC,CAAEsR,aAAa,IAAjB,UAA0BtB,EAAU/M,GAAGxB,YAAvC,aAA0B,EAAmBM,KAAM,MAG/DiO,EAAYA,EAAU/C,QACpB,SAAAuD,GAAE,OAAIA,EAAGrQ,KAAO4P,GAAUS,EAAG5D,SAAWmD,MAG1C9M,MApBG+M,EAAUjN,OAAS,GAAG,kBAOzB,MAiBJwO,QAAQC,IAAI,SAAUH,IAoDlB,SACE,cAACvM,EAAA,EAAD,CAAYhF,QAAQ,KAApB,mCAEF,qBAAKF,UAAU,YAAf,SACE,cAAC,IAAD,CACE6R,oBAAoB,EACpBhC,SAAUA,EACViC,iBAvae,SAAAC,GAAgB,OACvCjC,GAAY,SAAAkC,GAAG,OAAIC,YAAeF,EAAkBC,OAua5CE,UAtaQ,SAAAC,GAAM,OAAIrC,GAAY,SAAAkC,GAAG,OAAII,YAAQD,EAAQH,OAuarDlD,UAAWA,EAEXuD,kBA3DsB,SAAA/P,GACzBA,GACH+M,EAAc","file":"static/js/4.a2fce9d4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./CardHeader.scss\";\r\n\r\nconst CardHeader = props => {\r\n  const { handleSave, hasPreviewButton, children, ...rest } = props;\r\n  const history = useHistory();\r\n\r\n  const navToPreview = () => {\r\n    history.push({ pathname: \"/preview\" });\r\n  };\r\n  return (\r\n    <div className={`CardHeader`} {...rest}>\r\n      <div className=\"left-section\">\r\n        {children}\r\n        <IconButton disableRipple>\r\n          <InfoOutlinedIcon />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"d-flex\">\r\n        {hasPreviewButton && (\r\n          <Button variant=\"text\" className=\"btn-preview\" onClick={navToPreview}>\r\n            Go to Preview\r\n          </Button>\r\n        )}\r\n        {handleSave && (\r\n          <Button variant=\"contained\" onClick={handleSave}>\r\n            Save\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CardHeader };\r\n","export const EVENTS = [\r\n  { id: 1, name: \"New order placed\" },\r\n  { id: 2, name: \"New signup\" },\r\n  { id: 3, name: \"New subscriber\" },\r\n  { id: 4, name: \"New cancellation\" }\r\n];\r\n\r\nexport const CONDITIONS = [\r\n  { id: 1, name: \"Amount > 100\" },\r\n  { id: 2, name: \"Amount < 100\" },\r\n  { id: 3, name: \"Product is Coffee\" },\r\n  { id: 4, name: \"Product is Tea\" },\r\n  { id: 5, name: \"Date > Today\" },\r\n  { id: 6, name: \"Date < Today\" }\r\n];\r\nexport const ACTIONS = [\r\n  {\r\n    id: 1,\r\n    name: \"Send email to Contact\",\r\n    type: \"email\",\r\n    label: \"Email address\"\r\n  },\r\n  { id: 2, name: \"Call Contact\", type: \"tel\", label: \"Contact Number\" },\r\n  { id: 3, name: \"Add Tag to Contact\", type: \"tel\", label: \"Contact Number\" },\r\n  { id: 4, name: \"Remove Contact\", type: \"tel\", label: \"Contact Number\" }\r\n];\r\n\r\nexport const SAMPLE_EVENT_TRIGGERS = [\r\n  {\r\n    eventKey: \"NewOrder\",\r\n    eventDisplay: \"New order placed\",\r\n    fields: [\r\n      {\r\n        conditionKey: \"ProductTitle\",\r\n        conditionDisplay: \"Product Title\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        conditionKey: \"ProductAmount\",\r\n        conditionDisplay: \"Product Amount\",\r\n        type: \"int\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    eventKey: \"NewSignup\",\r\n    eventDisplay: \"New signup\",\r\n    fields: [\r\n      {\r\n        conditionKey: \"Gender\",\r\n        conditionDisplay: \"Customer Gender\",\r\n        type: \"option\",\r\n        options: [\"Male\", \"Female\"]\r\n      },\r\n      { conditionKey: \"DOB\", conditionDisplay: \"Birthday\", type: \"date\" }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const SAMPLE_ACTIONS = [\r\n  {\r\n    actionKey: \"SendEmail\",\r\n    actionDisplay: \"Send email to contact\",\r\n    fields: [\r\n      { key: \"emailAddress\", placeHolder: \"Email Address\", type: \"string\" }\r\n    ]\r\n  },\r\n  {\r\n    actionKey: \"CallContact\",\r\n    actionDisplay: \"Call contact\",\r\n    fields: [\r\n      { key: \"callContact\", placeHolder: \"Contact Number\", type: \"string\" },\r\n      {\r\n        key: \"callContactCountry\",\r\n        placeHolder: \"Country\",\r\n        type: \"selection\",\r\n        option: [\"Singapore\", \"Malaysia\"]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const CONDITION_OPERATORS = [\r\n  { name: \"Equal\", value: \"=\", type: \"string\" },\r\n  { name: \"Not equal\", value: \"!=\", type: \"string\" },\r\n  { name: \"Contains\", value: \"contains\", type: \"string\" },\r\n  { name: \"Not contains\", value: \"not contains\", type: \"string\" },\r\n  { name: \"Greater than\", value: \">\", type: \"int\" },\r\n  { name: \"Less than\", value: \"<\", type: \"int\" },\r\n  { name: \"Greater and equal than\", value: \">=\", type: \"int\" },\r\n  { name: \"Less and equal than\", value: \"<=\", type: \"int\" },\r\n  { name: \"Equal\", value: \"=\", type: \"date\" },\r\n  { name: \"Earlier than\", value: \"earlier than\", type: \"date\" },\r\n  { name: \"Later than\", value: \"later than\", type: \"date\" }\r\n];\r\n\r\nexport const SAMPLE_FLOW = {\r\n  eventKey: \"NewOrder\",\r\n  conditions: [\r\n    {\r\n      \"Fn::If\": [\r\n        [\r\n          {\r\n            \"Fn::And\": [\r\n              {\r\n                conditionKey: \"ProductTitle\",\r\n                value: [\"coke\", \"pepsi\"],\r\n                operator: \"contains\"\r\n              },\r\n              {\r\n                conditionKey: \"ProductAmount\",\r\n                value: [\"30\"],\r\n                operator: \">=\"\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            \"Fn::If\": [\r\n              [\r\n                {\r\n                  conditionKey: \"ProductTitle\",\r\n                  value: [\"coke\"],\r\n                  operator: \"=\"\r\n                }\r\n              ],\r\n              [\r\n                {\r\n                  actionKey: \"CallContact\",\r\n                  actionInputs: [\r\n                    {\r\n                      key: \"callContact\",\r\n                      value: \"999\"\r\n                    },\r\n                    {\r\n                      key: \"callContactCountry\",\r\n                      value: \"Singapore\"\r\n                    }\r\n                  ]\r\n                }\r\n              ],\r\n              [\r\n                {\r\n                  actionKey: \"SendEmail\",\r\n                  actionInputs: [\r\n                    {\r\n                      key: \"sendEmail\",\r\n                      value: \"simon@gmail.com\"\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            ]\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            actionKey: \"CallContact\",\r\n            actionInputs: [\r\n              {\r\n                key: \"callContact\",\r\n                value: \"0123456789\"\r\n              },\r\n              {\r\n                key: \"callContactCountry\",\r\n                value: \"Malaysia\"\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            actionKey: \"SendEmail\",\r\n            actionInputs: [\r\n              {\r\n                key: \"sendEmail\",\r\n                value: \"hello@gmail.com\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n};\r\n","import React, { memo } from \"react\";\r\n\r\nimport { Handle, useStoreState } from \"react-flow-renderer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport \"./ButtonSelectorNode.scss\";\r\n\r\nexport default memo(({ id, data, isConnectable }) => {\r\n  const selectedElements = useStoreState(store => store.selectedElements);\r\n\r\n  return (\r\n    <div\r\n      className={`ButtonSelectorNode ${\r\n        selectedElements && selectedElements[0].id === id ? \"is-selected\" : \"\"\r\n      }`}\r\n      onClick={() => data.focusNodeAction(id)}\r\n    >\r\n      <div>\r\n        <Typography variant=\"body1\">{data.label}</Typography>\r\n      </div>\r\n\r\n      {data.type === \"event\" &&\r\n        (data.item ? (\r\n          <Button variant=\"contained\" disabled className=\"lbl-event\">\r\n            {data.item?.eventDisplay}\r\n          </Button>\r\n        ) : (\r\n          data.btnLabel && (\r\n            <Button\r\n              onClick={e => {\r\n                data.btnAction(id);\r\n                e.stopPropagation();\r\n              }}\r\n              variant=\"contained\"\r\n            >\r\n              {data.btnLabel}\r\n            </Button>\r\n          )\r\n        ))}\r\n\r\n      {(data.type === \"condition\" || data.type === \"choice\") && (\r\n        <>\r\n          {data.type === \"condition\" && (\r\n            <IconButton\r\n              disableRipple\r\n              className=\"btn-swap\"\r\n              onClick={e => {\r\n                data.handleSwapConditionArrows(id);\r\n                e.stopPropagation();\r\n              }}\r\n            >\r\n              <LoopIcon />\r\n            </IconButton>\r\n          )}\r\n          {data.item ? (\r\n            <Button variant=\"contained\" disabled className=\"lbl-condition\">\r\n              {Object.keys(data.item)[0].includes(\"Fn::\")\r\n                ? Object.values(data.item)[0]\r\n                    .map(\r\n                      cond =>\r\n                        `${cond.conditionKey} ${\r\n                          cond.operator\r\n                        } ${cond.value.join(\", \")}`\r\n                    )\r\n                    .join(` ${Object.keys(data.item)[0].replace(\"Fn::\", \"\")} `)\r\n                : `${data.item.conditionKey} ${\r\n                    data.item.operator\r\n                  } ${data.item.value.join(\", \")}`}\r\n            </Button>\r\n          ) : (\r\n            data.btnLabel && (\r\n              <Button\r\n                onClick={e => {\r\n                  data.btnAction(id);\r\n                  e.stopPropagation();\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                {data.btnLabel}\r\n              </Button>\r\n            )\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* type === 'action' || type === 'action-yes' */}\r\n      {data.type.includes(\"action\") &&\r\n        (data.item?.length\r\n          ? data.item.map((a, i) => (\r\n              <React.Fragment key={i}>\r\n                <div className=\"label-div\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={e => {\r\n                      data.handleSelectAction(id, i);\r\n                      e.stopPropagation();\r\n                    }}\r\n                    className=\"lbl-action\"\r\n                  >\r\n                    {`Action: ${a.actionKey}\r\n                    ${a.actionInputs\r\n                      .map(ai => `${ai.key} - ${ai.value}`)\r\n                      .join(\", \")}`}\r\n                  </Button>\r\n                  <IconButton\r\n                    disableRipple\r\n                    onClick={e => {\r\n                      data.handleDeleteAction(id, i);\r\n                      e.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <HighlightOffIcon />\r\n                  </IconButton>\r\n                  {i !== data.item.length - 1 && (\r\n                    <Typography variant=\"h6\">AND</Typography>\r\n                  )}\r\n                </div>\r\n              </React.Fragment>\r\n            ))\r\n          : data.btnLabel && (\r\n              <Button\r\n                onClick={e => {\r\n                  data.btnAction(id);\r\n                  e.stopPropagation();\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                {data.btnLabel}\r\n              </Button>\r\n            ))}\r\n\r\n      {data.type === \"choice\" && (\r\n        <Typography variant=\"h6\" className=\"text-or\">\r\n          OR\r\n        </Typography>\r\n      )}\r\n\r\n      {data.btnLabel2 && (\r\n        <Button\r\n          onClick={e => {\r\n            data.btnAction2(id);\r\n            e.stopPropagation();\r\n          }}\r\n          variant=\"contained\"\r\n        >\r\n          {data.btnLabel2}\r\n        </Button>\r\n      )}\r\n\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        style={{ bottom: 10, top: \"auto\", background: \"#555\" }}\r\n        isConnectable={isConnectable}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\n\nexports.default = _default;","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { CardHeader } from \"components/common/CardHeader/CardHeader\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport KeyboardArrowUpOutlinedIcon from \"@material-ui/icons/KeyboardArrowUpOutlined\";\r\nimport KeyboardArrowDownOutlinedIcon from \"@material-ui/icons/KeyboardArrowDownOutlined\";\r\nimport { SAMPLE_EVENT_TRIGGERS } from \"constants/constants\";\r\n\r\nimport \"./Events.scss\";\r\n\r\nconst Events = props => {\r\n  const { handleSelect, selectedEventKey, ...rest } = props;\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  return (\r\n    <div className={`Events`} {...rest}>\r\n      <CardHeader>\r\n        <Typography variant=\"h3\">Events</Typography>\r\n      </CardHeader>\r\n\r\n      <div\r\n        className={`content-body ${\r\n          SAMPLE_EVENT_TRIGGERS.length > 3 ? \"has-show-more\" : \"\"\r\n        } ${showMore ? \"show-all\" : \"\"}`}\r\n        {...rest}\r\n      >\r\n        {SAMPLE_EVENT_TRIGGERS.map(item => (\r\n          <Button\r\n            key={item.eventKey}\r\n            onClick={() => handleSelect(item)}\r\n            disableRipple\r\n            variant=\"text\"\r\n            className={`btn-card-item ${\r\n              selectedEventKey === item.eventKey ? \"on-focus\" : \"\"\r\n            }`}\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n          >\r\n            {item.eventDisplay}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n\r\n      {SAMPLE_EVENT_TRIGGERS.length > 3 && (\r\n        <div className=\"btn-show-more\">\r\n          <Button\r\n            onClick={() => setShowMore(!showMore)}\r\n            variant=\"text\"\r\n            disableRipple\r\n            endIcon={\r\n              showMore ? (\r\n                <KeyboardArrowUpOutlinedIcon />\r\n              ) : (\r\n                <KeyboardArrowDownOutlinedIcon />\r\n              )\r\n            }\r\n          >\r\n            Show {showMore ? \"less\" : \"more\"}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nEvents.propTypes = {\r\n  selectedEventKey: PropTypes.string,\r\n  handleSelect: PropTypes.func\r\n};\r\nexport { Events };\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nimport isMuiElement from '../utils/isMuiElement';\nimport useForkRef from '../utils/useForkRef';\nimport ListContext from '../List/ListContext';\nimport * as ReactDOM from 'react-dom';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */\n    root: {\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      position: 'relative',\n      textDecoration: 'none',\n      width: '100%',\n      boxSizing: 'border-box',\n      textAlign: 'left',\n      paddingTop: 8,\n      paddingBottom: 8,\n      '&$focusVisible': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$selected, &$selected:hover': {\n        backgroundColor: theme.palette.action.selected\n      },\n      '&$disabled': {\n        opacity: 0.5\n      }\n    },\n\n    /* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */\n    container: {\n      position: 'relative'\n    },\n\n    /* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */\n    focusVisible: {},\n\n    /* Styles applied to the `component` element if dense. */\n    dense: {\n      paddingTop: 4,\n      paddingBottom: 4\n    },\n\n    /* Styles applied to the `component` element if `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      alignItems: 'flex-start'\n    },\n\n    /* Pseudo-class applied to the inner `component` element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the inner `component` element if `divider={true}`. */\n    divider: {\n      borderBottom: \"1px solid \".concat(theme.palette.divider),\n      backgroundClip: 'padding-box'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the inner `component` element if `button={true}`. */\n    button: {\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: theme.palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */\n    secondaryAction: {\n      // Add some space to avoid collision as `ListItemSecondaryAction`\n      // is absolutely positioned.\n      paddingRight: 48\n    },\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {}\n  };\n};\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * Uses an additional container component if `ListItemSecondaryAction` is the last child.\n */\n\nvar ListItem = /*#__PURE__*/React.forwardRef(function ListItem(props, ref) {\n  var _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'center' : _props$alignItems,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$button = props.button,\n      button = _props$button === void 0 ? false : _props$button,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      componentProp = props.component,\n      _props$ContainerCompo = props.ContainerComponent,\n      ContainerComponent = _props$ContainerCompo === void 0 ? 'li' : _props$ContainerCompo,\n      _props$ContainerProps = props.ContainerProps;\n  _props$ContainerProps = _props$ContainerProps === void 0 ? {} : _props$ContainerProps;\n\n  var ContainerClassName = _props$ContainerProps.className,\n      ContainerProps = _objectWithoutProperties(_props$ContainerProps, [\"className\"]),\n      _props$dense = props.dense,\n      dense = _props$dense === void 0 ? false : _props$dense,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$divider = props.divider,\n      divider = _props$divider === void 0 ? false : _props$divider,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$selected = props.selected,\n      selected = _props$selected === void 0 ? false : _props$selected,\n      other = _objectWithoutProperties(props, [\"alignItems\", \"autoFocus\", \"button\", \"children\", \"classes\", \"className\", \"component\", \"ContainerComponent\", \"ContainerProps\", \"dense\", \"disabled\", \"disableGutters\", \"divider\", \"focusVisibleClassName\", \"selected\"]);\n\n  var context = React.useContext(ListContext);\n  var childContext = {\n    dense: dense || context.dense || false,\n    alignItems: alignItems\n  };\n  var listItemRef = React.useRef(null);\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      if (listItemRef.current) {\n        listItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('Material-UI: Unable to set focus to a ListItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  var children = React.Children.toArray(childrenProp);\n  var hasSecondaryAction = children.length && isMuiElement(children[children.length - 1], ['ListItemSecondaryAction']);\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listItemRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n\n  var componentProps = _extends({\n    className: clsx(classes.root, className, childContext.dense && classes.dense, !disableGutters && classes.gutters, divider && classes.divider, disabled && classes.disabled, button && classes.button, alignItems !== \"center\" && classes.alignItemsFlexStart, hasSecondaryAction && classes.secondaryAction, selected && classes.selected),\n    disabled: disabled\n  }, other);\n\n  var Component = componentProp || 'li';\n\n  if (button) {\n    componentProps.component = componentProp || 'div';\n    componentProps.focusVisibleClassName = clsx(classes.focusVisible, focusVisibleClassName);\n    Component = ButtonBase;\n  }\n\n  if (hasSecondaryAction) {\n    // Use div by default.\n    Component = !componentProps.component && !componentProp ? 'div' : Component; // Avoid nesting of li > li.\n\n    if (ContainerComponent === 'li') {\n      if (Component === 'li') {\n        Component = 'div';\n      } else if (componentProps.component === 'li') {\n        componentProps.component = 'div';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(ListContext.Provider, {\n      value: childContext\n    }, /*#__PURE__*/React.createElement(ContainerComponent, _extends({\n      className: clsx(classes.container, ContainerClassName),\n      ref: handleRef\n    }, ContainerProps), /*#__PURE__*/React.createElement(Component, componentProps, children), children.pop()));\n  }\n\n  return /*#__PURE__*/React.createElement(ListContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: handleRef\n  }, componentProps), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItem.propTypes = {\n  /**\n   * Defines the `align-items` style property.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center']),\n\n  /**\n   * If `true`, the list item will be focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be a button (using `ButtonBase`). Props intended\n   * for `ButtonBase` can then be applied to `ListItem`.\n   */\n  button: PropTypes.bool,\n\n  /**\n   * The content of the component. If a `ListItemSecondaryAction` is used it must\n   * be the last child.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var children = React.Children.toArray(props.children); // React.Children.toArray(props.children).findLastIndex(isListItemSecondaryAction)\n\n    var secondaryActionIndex = -1;\n\n    for (var i = children.length - 1; i >= 0; i -= 1) {\n      var child = children[i];\n\n      if (isMuiElement(child, ['ListItemSecondaryAction'])) {\n        secondaryActionIndex = i;\n        break;\n      }\n    } //  is ListItemSecondaryAction the last child of ListItem\n\n\n    if (secondaryActionIndex !== -1 && secondaryActionIndex !== children.length - 1) {\n      return new Error('Material-UI: You used an element after ListItemSecondaryAction. ' + 'For ListItem to detect that it has a secondary action ' + 'you must pass it as the last child to ListItem.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * By default, it's a `li` when `button` is `false` and a `div` when `button` is `true`.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The container component used when a `ListItemSecondaryAction` is the last child.\n   */\n  ContainerComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the container component if used.\n   */\n  ContainerProps: PropTypes.object,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * If `true`, the list item will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, a 1px light border is added to the bottom of the list item.\n   */\n  divider: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * Use to apply selected styling.\n   */\n  selected: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItem'\n})(ListItem);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes = {\n  /**\n   * Menu item contents.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input will be used.\n   */\n  dense: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * `classes` prop applied to the [`ListItem`](/api/list-item/) element.\n   */\n  ListItemClasses: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  role: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport { CardHeader } from \"components/common/CardHeader/CardHeader\";\r\nimport {\r\n  SAMPLE_EVENT_TRIGGERS,\r\n  CONDITION_OPERATORS\r\n} from \"constants/constants\";\r\n\r\nimport \"./Conditions.scss\";\r\n\r\nconst Conditions = props => {\r\n  const { selectedEventKey, selectedConditionObj, handleSelect, ...rest } =\r\n    props;\r\n\r\n  useEffect(() => {\r\n    setConditions(\r\n      Object.keys(selectedConditionObj)[0]?.includes(\"Fn::\")\r\n        ? Object.values(selectedConditionObj)[0]\r\n        : [\r\n            {\r\n              conditionKey: selectedConditionObj.conditionKey || \"\",\r\n              value: selectedConditionObj.value || [],\r\n              operator: selectedConditionObj.operator || \"\"\r\n            }\r\n          ]\r\n    );\r\n    setMustMeet(\r\n      Object.keys(selectedConditionObj)[0]?.includes(\"Fn::\")\r\n        ? Object.keys(selectedConditionObj)[0]\r\n        : \"\"\r\n    );\r\n  }, [selectedConditionObj]);\r\n\r\n  const initialConditionObj = {\r\n    conditionKey: \"\",\r\n    value: [],\r\n    operator: \"\"\r\n  };\r\n\r\n  const selectedEventFields = SAMPLE_EVENT_TRIGGERS.find(\r\n    t => t.eventKey === selectedEventKey\r\n  ).fields;\r\n\r\n  const [mustMeet, setMustMeet] = useState(\"\");\r\n  const [conditions, setConditions] = useState([\r\n    {\r\n      conditionKey: \"\",\r\n      value: [],\r\n      operator: \"\"\r\n    }\r\n  ]);\r\n\r\n  const handleOnAdd = () => {\r\n    if (!mustMeet) {\r\n      setMustMeet(\"Fn::And\");\r\n    }\r\n    setConditions([...conditions, initialConditionObj]);\r\n  };\r\n\r\n  const handleOnSave = () => {\r\n    const result = mustMeet ? { [mustMeet]: conditions } : conditions[0];\r\n    handleSelect(result);\r\n  };\r\n\r\n  const handleOnRemove = index => {\r\n    if (conditions.length === 2) {\r\n      setMustMeet(\"\");\r\n    }\r\n    const tempConditions = Object.assign([], conditions);\r\n    tempConditions.splice(index, 1);\r\n    setConditions(tempConditions);\r\n  };\r\n\r\n  const handleOnChange = (value, index, keyName) => {\r\n    const tempConditions = Object.assign([], conditions);\r\n    if (keyName === \"value\") {\r\n      tempConditions[index].value = value.split(\",\");\r\n    } else {\r\n      tempConditions[index][keyName] = value;\r\n    }\r\n    setConditions(tempConditions);\r\n  };\r\n\r\n  return (\r\n    <div className={`Conditions`} {...rest}>\r\n      <CardHeader>\r\n        <Typography variant=\"h3\">Conditions</Typography>\r\n      </CardHeader>\r\n\r\n      <div className={`content-body`} {...rest}>\r\n        {conditions.length > 1 && (\r\n          <FormControl className=\"mb-1-5\">\r\n            <InputLabel id={`label-must-meet`}>\r\n              All conditions must meet\r\n            </InputLabel>\r\n            <Select\r\n              labelId={`label-must-meet`}\r\n              id=\"must-meet\"\r\n              value={mustMeet}\r\n              onChange={e => setMustMeet(e.target.value)}\r\n            >\r\n              <MenuItem value=\"Fn::And\">AND</MenuItem>\r\n              <MenuItem value=\"Fn::Or\">OR</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n\r\n        {conditions.map((c, i) => (\r\n          <React.Fragment key={i}>\r\n            {i !== 0 && (\r\n              <Button\r\n                className=\"btn-clear\"\r\n                variant=\"text\"\r\n                startIcon={<ClearIcon />}\r\n                disableRipple\r\n                onClick={() => handleOnRemove(i)}\r\n              >\r\n                Remove\r\n              </Button>\r\n            )}\r\n            <FormControl>\r\n              <InputLabel id={`label-condition-${i}`}>\r\n                Condition {i + 1}\r\n              </InputLabel>\r\n              <Select\r\n                labelId={`label-condition-${i}`}\r\n                id={`condition-${i}`}\r\n                value={c.conditionKey || \"\"}\r\n                onChange={e =>\r\n                  handleOnChange(e.target.value, i, \"conditionKey\")\r\n                }\r\n              >\r\n                {selectedEventFields.map(item => (\r\n                  <MenuItem key={item.conditionKey} value={item.conditionKey}>\r\n                    {item.conditionDisplay}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n              <InputLabel id={`label-operator-${i}`}>\r\n                Operator {i + 1}\r\n              </InputLabel>\r\n              <Select\r\n                labelId={`label-operator-${i}`}\r\n                id={`operator-${i}`}\r\n                value={c.operator || \"\"}\r\n                onChange={e => handleOnChange(e.target.value, i, \"operator\")}\r\n              >\r\n                {selectedEventFields.find(\r\n                  f => f.conditionKey === c.conditionKey\r\n                )?.type === \"option\"\r\n                  ? selectedEventFields\r\n                      .find(f => f.conditionKey === c.conditionKey)\r\n                      .options.map(option => (\r\n                        <MenuItem key={option} value={option}>\r\n                          {option}\r\n                        </MenuItem>\r\n                      ))\r\n                  : CONDITION_OPERATORS.filter(\r\n                      o =>\r\n                        o.type ===\r\n                        selectedEventFields.find(\r\n                          f => f.conditionKey === c.conditionKey\r\n                        )?.type\r\n                    )?.map(operator => (\r\n                      <MenuItem key={operator.value} value={operator.value}>\r\n                        {operator.name}\r\n                      </MenuItem>\r\n                    ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControl>\r\n              <TextField\r\n                fullWidth\r\n                margin=\"dense\"\r\n                onChange={e => handleOnChange(e.target.value, i, \"value\")}\r\n                type={\"text\"}\r\n                value={c.value.join(\",\") || \"\"}\r\n                label={`Value ${i + 1}`}\r\n              />\r\n              <FormHelperText>\r\n                Please separate multiple values by comma\r\n              </FormHelperText>\r\n            </FormControl>\r\n\r\n            {conditions.length - 1 !== i && (\r\n              <Typography variant=\"h6\" className=\"must-meet-separator\">\r\n                {mustMeet === \"Fn::And\" ? \"AND\" : \"OR\"}\r\n              </Typography>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n\r\n        <Button\r\n          variant=\"text\"\r\n          startIcon={<AddBoxOutlinedIcon />}\r\n          disableRipple\r\n          className=\"btn-add\"\r\n          onClick={handleOnAdd}\r\n        >\r\n          Add Condition\r\n        </Button>\r\n        <Button variant=\"contained\" disableRipple onClick={handleOnSave}>\r\n          Save Condition\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nConditions.propTypes = {\r\n  selectedEventKey: PropTypes.string,\r\n  selectedConditionObj: PropTypes.object,\r\n  handleSelect: PropTypes.func\r\n};\r\nexport { Conditions };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { CardHeader } from \"components/common/CardHeader/CardHeader\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport KeyboardArrowUpOutlinedIcon from \"@material-ui/icons/KeyboardArrowUpOutlined\";\r\nimport KeyboardArrowDownOutlinedIcon from \"@material-ui/icons/KeyboardArrowDownOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { SAMPLE_ACTIONS } from \"constants/constants\";\r\n\r\nimport \"./Actions.scss\";\r\n\r\nconst Actions = props => {\r\n  const {\r\n    handleSelect,\r\n    handleAddAction,\r\n    actionsArr,\r\n    selectedActionObj,\r\n    ...rest\r\n  } = props;\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(selectedActionObj).length) {\r\n      setClickedAction(formatActionInputs(selectedActionObj));\r\n    } else {\r\n      setClickedAction({});\r\n    }\r\n  }, [selectedActionObj]);\r\n\r\n  const formatActionInputs = onFocusObj => {\r\n    const tempAction = Object.assign(\r\n      {},\r\n      SAMPLE_ACTIONS.find(f => f.actionKey === onFocusObj.actionKey)\r\n    );\r\n    tempAction.fields?.forEach(f => {\r\n      f.value = onFocusObj.actionInputs.find(\r\n        input => input.key === f.key\r\n      )?.value;\r\n    });\r\n    return tempAction;\r\n  };\r\n\r\n  const [clickedAction, setClickedAction] = useState({});\r\n  const [showMore, setShowMore] = useState(false);\r\n\r\n  const handleOnClickAction = action => {\r\n    setClickedAction(action);\r\n  };\r\n\r\n  const handleOnAddOrUpdate = () => {\r\n    const result = {\r\n      actionKey: clickedAction.actionKey,\r\n      actionInputs: clickedAction.fields.map(f => ({\r\n        key: f.key,\r\n        value: f.value\r\n      }))\r\n    };\r\n    handleSelect(\r\n      result,\r\n      Object.keys(selectedActionObj).length ? \"update\" : \"add\"\r\n    );\r\n  };\r\n\r\n  const handleFieldInputChange = (e, field) => {\r\n    const tempClickedAction = Object.assign({}, clickedAction);\r\n    const fieldIndex = clickedAction.fields.findIndex(f => f.key === field.key);\r\n    tempClickedAction.fields[fieldIndex].value = e.target.value;\r\n    setClickedAction(tempClickedAction);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={`Actions`} {...rest}>\r\n        <CardHeader>\r\n          <Typography variant=\"h3\">Actions</Typography>\r\n        </CardHeader>\r\n\r\n        <div\r\n          className={`content-body ${\r\n            SAMPLE_ACTIONS.length > 3 ? \"has-show-more\" : \"\"\r\n          } ${showMore ? \"show-all\" : \"\"}`}\r\n          {...rest}\r\n        >\r\n          {SAMPLE_ACTIONS.map(item => (\r\n            <Button\r\n              key={item.actionKey}\r\n              onClick={() => handleOnClickAction(item)}\r\n              disableRipple\r\n              variant=\"text\"\r\n              className={`btn-card-item ${\r\n                clickedAction?.actionKey === item.actionKey ? \"on-focus\" : \"\"\r\n              }`}\r\n              startIcon={<AddBoxOutlinedIcon />}\r\n            >\r\n              {item.actionDisplay}\r\n            </Button>\r\n          ))}\r\n        </div>\r\n\r\n        {SAMPLE_ACTIONS.length > 3 && (\r\n          <div className=\"btn-show-more\">\r\n            <Button\r\n              onClick={() => setShowMore(!showMore)}\r\n              variant=\"text\"\r\n              disableRipple\r\n              endIcon={\r\n                showMore ? (\r\n                  <KeyboardArrowUpOutlinedIcon />\r\n                ) : (\r\n                  <KeyboardArrowDownOutlinedIcon />\r\n                )\r\n              }\r\n            >\r\n              Show {showMore ? \"less\" : \"more\"}\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {Object.keys(clickedAction).length > 0 && (\r\n        <>\r\n          <CardHeader>\r\n            <Typography variant=\"h3\">Action Details</Typography>\r\n          </CardHeader>\r\n          <div className=\"card-body\">\r\n            {clickedAction.fields.map(field =>\r\n              field.type === \"selection\" ? (\r\n                <FormControl key={field.key}>\r\n                  <InputLabel id={`label-${field.key}`}>\r\n                    {field.placeHolder}\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId={`label-${field.key}`}\r\n                    id={field.key}\r\n                    value={field.value || \"\"}\r\n                    onChange={e => handleFieldInputChange(e, field)}\r\n                  >\r\n                    {field.option.map(opt => (\r\n                      <MenuItem key={opt} value={opt}>\r\n                        {opt}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              ) : (\r\n                <TextField\r\n                  key={field.key}\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  onChange={e => handleFieldInputChange(e, field)}\r\n                  type={\"text\"}\r\n                  value={field.value || \"\"}\r\n                  label={field.placeHolder}\r\n                  placeholder={field.placeHolder}\r\n                />\r\n              )\r\n            )}\r\n            <Button variant=\"text\" disableRipple onClick={handleOnAddOrUpdate}>\r\n              {Object.keys(selectedActionObj).length ? \"Update\" : \"Add\"}\r\n            </Button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nActions.propTypes = {\r\n  handleSelect: PropTypes.func,\r\n  handleAddAction: PropTypes.func,\r\n  actionsArr: PropTypes.array,\r\n  selectedActionObj: PropTypes.object\r\n};\r\nexport { Actions };\r\n","import React, { useState, useRef } from \"react\";\r\nimport ReactFlow, { removeElements, addEdge } from \"react-flow-renderer\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Events } from \"components/sidePanel/Events/Events\";\r\nimport { Conditions } from \"components/sidePanel/Conditions/Conditions\";\r\nimport { Actions } from \"components/sidePanel/Actions/Actions\";\r\nimport { Background } from \"components/common/Background/Background\";\r\nimport { CardHeader } from \"components/common/CardHeader/CardHeader\";\r\nimport ButtonSelectorNode from \"components/ButtonSelectorNode/ButtonSelectorNode\";\r\n\r\nimport \"./HomePage.scss\";\r\n\r\nconst nodeTypes = {\r\n  btnSelectorNode: ButtonSelectorNode\r\n};\r\n\r\nfunction HomePage() {\r\n  const [flow, setFlow] = useState({});\r\n  const [showDrawer, setShowDrawer] = useState(\"events\");\r\n  const [selectedNode, setSelectedNode] = useState(\"1\");\r\n  const [selectedActionIndex, setSelectedActionIndex] = useState(null);\r\n\r\n  const initialElements = [\r\n    {\r\n      id: \"1\",\r\n      type: \"btnSelectorNode\",\r\n      data: {\r\n        label: \"When\",\r\n        type: \"event\",\r\n        btnLabel: \"Select event trigger\",\r\n        focusNodeAction: id => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(id);\r\n        },\r\n        btnAction: id => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(id);\r\n        }\r\n      },\r\n      position: { x: 250, y: 25 }\r\n    }\r\n  ];\r\n\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onElementsRemove = elementsToRemove =>\r\n    setElements(els => removeElements(elementsToRemove, els));\r\n  const onConnect = params => setElements(els => addEdge(params, els));\r\n  const elementsStateRef = useRef();\r\n  elementsStateRef.current = elements;\r\n  const selectedNodeStateRef = useRef();\r\n  selectedNodeStateRef.current = selectedNode;\r\n  const selActionStateRef = useRef();\r\n  selActionStateRef.current = selectedActionIndex;\r\n\r\n  const generateNextStepNodeObj = (nodeId, position) => {\r\n    return {\r\n      label: `Next Step`,\r\n      type: \"choice\",\r\n      btnLabel: \"Add condition\",\r\n      focusNodeAction: id => {\r\n        setShowDrawer(null);\r\n        setSelectedNode(id);\r\n      },\r\n      btnAction: id => {\r\n        setShowDrawer(\"conditions\");\r\n        setSelectedNode(id);\r\n\r\n        let tempElems = Object.assign([], elementsStateRef.current);\r\n        tempElems = tempElems.filter(\r\n          t =>\r\n            t.id !== nodeId &&\r\n            t.id !== `edges-${(Number(nodeId) - 1).toString()}-${nodeId}`\r\n        );\r\n        tempElems.push(\r\n          {\r\n            id: nodeId, // 2\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `If...`,\r\n              type: \"condition\",\r\n              btnLabel: \"Add condition\",\r\n              focusNodeAction: id => {\r\n                setShowDrawer(\"conditions\");\r\n                setSelectedNode(id);\r\n              },\r\n              handleSwapConditionArrows: id => handleSwapConditionArrows(id),\r\n              btnAction: id => {\r\n                setShowDrawer(\"conditions\");\r\n                setSelectedNode(id);\r\n              }\r\n            },\r\n            position: position\r\n          },\r\n          {\r\n            id: (Number(nodeId) + 1).toString(), // 3\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `Then...`,\r\n              type: \"action-yes\",\r\n              btnLabel: \"Add action\",\r\n              focusNodeAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedActionIndex(null);\r\n                setSelectedNode(id);\r\n              },\r\n              btnAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n              },\r\n              handleSelectAction: (id, itemIndex) => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n                handleSelectAction(itemIndex);\r\n              },\r\n              handleDeleteAction: (id, itemIndex) => {\r\n                setSelectedNode(id);\r\n                handleDeleteAction(itemIndex);\r\n              }\r\n            },\r\n            position: { x: position.x, y: position.y + 400 }\r\n          },\r\n          {\r\n            id: (Number(nodeId) + 2).toString(), // 4\r\n            type: \"btnSelectorNode\",\r\n            data: generateNextStepNodeObj((Number(nodeId) + 2).toString(), {\r\n              x: position.x + 300,\r\n              y: position.y + 150\r\n            }),\r\n            position: { x: position.x + 300, y: position.y + 150 }\r\n          },\r\n          ...(nodeId === \"2\"\r\n            ? [\r\n                {\r\n                  id: `edges-${(Number(nodeId) - 1).toString()}-${nodeId}`, // edges-1-2\r\n                  source: (Number(nodeId) - 1).toString(),\r\n                  target: nodeId,\r\n                  type: \"smoothstep\"\r\n                }\r\n              ]\r\n            : []),\r\n          {\r\n            id: `edges-${nodeId}-${(Number(nodeId) + 1).toString()}`, // edges-2-3\r\n            source: nodeId,\r\n            target: (Number(nodeId) + 1).toString(),\r\n            type: \"smoothstep\",\r\n            label: \"yes\"\r\n          },\r\n          {\r\n            id: `edges-${nodeId}-${(Number(nodeId) + 2).toString()}`, // edges-2-4\r\n            source: nodeId,\r\n            target: (Number(nodeId) + 2).toString(),\r\n            type: \"smoothstep\",\r\n            label: \"no\"\r\n          }\r\n        );\r\n        setElements(tempElems);\r\n      },\r\n      btnLabel2: \"Add Action\",\r\n      btnAction2: id => {\r\n        setShowDrawer(\"actions\");\r\n        setSelectedNode(id);\r\n\r\n        let tempElems = Object.assign([], elementsStateRef.current);\r\n        tempElems = tempElems.filter(\r\n          t =>\r\n            t.id !== nodeId &&\r\n            t.id !== `edges-${(Number(nodeId) - 1).toString()}-${nodeId}` // edges-1-2\r\n        );\r\n        tempElems.push(\r\n          {\r\n            id: nodeId,\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `Then...`,\r\n              type: \"action\",\r\n              btnLabel: \"Add action\",\r\n              focusNodeAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedActionIndex(null);\r\n                setSelectedNode(id);\r\n              },\r\n              btnAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n              },\r\n              handleSelectAction: (id, itemIndex) => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n                handleSelectAction(itemIndex);\r\n              },\r\n              handleDeleteAction: (id, itemIndex) => {\r\n                setSelectedNode(id);\r\n                handleDeleteAction(itemIndex);\r\n              }\r\n            },\r\n            position: position\r\n          },\r\n          ...(nodeId === \"2\"\r\n            ? [\r\n                {\r\n                  id: `edges-${(Number(nodeId) - 1).toString()}-${nodeId}`, // edges-1-2\r\n                  source: (Number(nodeId) - 1).toString(),\r\n                  target: nodeId,\r\n                  type: \"smoothstep\"\r\n                }\r\n              ]\r\n            : [])\r\n        );\r\n\r\n        setElements(tempElems);\r\n      }\r\n    };\r\n  };\r\n\r\n  const handleEventChange = event => {\r\n    setFlow({ ...flow, eventKey: event.eventKey });\r\n    let tempElems = Object.assign([], elementsStateRef.current);\r\n    tempElems[0] = {\r\n      id: \"1\",\r\n      type: \"btnSelectorNode\",\r\n      data: {\r\n        label: \"When\",\r\n        type: \"event\",\r\n        item: event,\r\n        focusNodeAction: id => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(id);\r\n        },\r\n        btnAction: id => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(id);\r\n        }\r\n      },\r\n      position: { x: 250, y: 25 }\r\n    };\r\n\r\n    if (tempElems.length === 1) {\r\n      tempElems.push(\r\n        {\r\n          id: \"2\",\r\n          type: \"btnSelectorNode\",\r\n          data: generateNextStepNodeObj(\"2\", { x: 250, y: 200 }),\r\n          position: { x: 250, y: 200 }\r\n        },\r\n        {\r\n          id: \"edges-1-2\",\r\n          source: \"1\",\r\n          target: \"2\",\r\n          type: \"smoothstep\"\r\n        }\r\n      );\r\n    }\r\n    setShowDrawer(null);\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleConditionChange = conditionObj => {\r\n    let tempElems = Object.assign([], elementsStateRef.current);\r\n    let tempElemIndex = tempElems.findIndex(\r\n      t => t.id === selectedNodeStateRef.current\r\n    );\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex]?.data,\r\n        item: conditionObj\r\n      }\r\n    };\r\n    setElements(tempElems);\r\n  };\r\n\r\n  // type = add / update\r\n  const handleActionChange = (actionObj, type) => {\r\n    let tempElems = Object.assign([], elementsStateRef.current);\r\n    let tempElemIndex = tempElems.findIndex(\r\n      t => t.id === selectedNodeStateRef.current\r\n    );\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex]?.data,\r\n        item:\r\n          type === \"update\"\r\n            ? [\r\n                ...tempElems[tempElemIndex]?.data?.item.slice(\r\n                  0,\r\n                  selectedActionIndex\r\n                ),\r\n                actionObj,\r\n                ...tempElems[tempElemIndex]?.data?.item.slice(\r\n                  selectedActionIndex + 1\r\n                )\r\n              ]\r\n            : [...(tempElems[tempElemIndex]?.data?.item || []), actionObj]\r\n      }\r\n    };\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleSelectAction = itemIndex => {\r\n    setSelectedActionIndex(itemIndex);\r\n  };\r\n\r\n  const handleDeleteAction = itemIndex => {\r\n    let tempElems = Object.assign([], elementsStateRef.current);\r\n    let tempElemIndex = tempElems.findIndex(\r\n      t => t.id === selectedNodeStateRef.current\r\n    );\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex]?.data,\r\n        item: (tempElems[tempElemIndex]?.data?.item || []).filter(\r\n          (x, i) => i !== itemIndex\r\n        )\r\n      }\r\n    };\r\n    setElements(tempElems);\r\n    setShowDrawer(null);\r\n  };\r\n\r\n  const handleSwapConditionArrows = nodeId => {\r\n    const tempElements = Object.assign([], elementsStateRef.current);\r\n    const yesNodeIndex = tempElements.findIndex(\r\n      el => el.source === nodeId && el.label === \"yes\"\r\n    );\r\n    const noNodeIndex = tempElements.findIndex(\r\n      el => el.source === nodeId && el.label === \"no\"\r\n    );\r\n    tempElements[yesNodeIndex].label =\r\n      tempElements[yesNodeIndex].label === \"yes\" ? \"no\" : \"yes\";\r\n    tempElements[noNodeIndex].label =\r\n      tempElements[noNodeIndex].label === \"yes\" ? \"no\" : \"yes\";\r\n    setElements(tempElements);\r\n  };\r\n\r\n  const recursionFormObj = (tempElems, nodeId) => {\r\n    let obj = {\r\n      \"Fn::If\": [[tempElems.find(el => el.id === nodeId).data?.item]]\r\n    };\r\n\r\n    tempElems = tempElems.filter(\r\n      el => el.target !== nodeId && el.id !== nodeId\r\n    );\r\n\r\n    // condition-yes-action\r\n    const yesNodeId = tempElems.find(\r\n      el => el.source === nodeId && el.label === \"yes\"\r\n    ).target;\r\n    if (tempElems.find(el => el.id === yesNodeId).data?.type === \"condition\") {\r\n      // recursion and return object to be pushed in to second array\r\n      obj[\"Fn::If\"].push([recursionFormObj(tempElems, nodeId)]);\r\n    } else {\r\n      obj[\"Fn::If\"].push(tempElems.find(el => el.id === yesNodeId).data?.item);\r\n    }\r\n    tempElems = tempElems.filter(\r\n      el => el.target !== yesNodeId && el.id !== yesNodeId\r\n    );\r\n\r\n    // condition-no-action\r\n    const noNodeId = tempElems.find(\r\n      el => el.source === nodeId && el.label === \"no\"\r\n    ).target;\r\n    if (tempElems.find(el => el.id === noNodeId).data?.type === \"condition\") {\r\n      // recursion and return object to be pushed in to third array\r\n      obj[\"Fn::If\"].push([recursionFormObj(tempElems, noNodeId)]);\r\n    } else {\r\n      obj[\"Fn::If\"].push(tempElems.find(el => el.id === noNodeId).data?.item);\r\n    }\r\n    tempElems = tempElems.filter(\r\n      el => el.target !== noNodeId && el.id !== noNodeId\r\n    );\r\n\r\n    return obj;\r\n  };\r\n\r\n  const handleSave = () => {\r\n    let tempElems = Object.assign([], elements);\r\n    const output = {\r\n      eventKey: \"\",\r\n      conditions: []\r\n    };\r\n\r\n    let i = 0;\r\n    while (tempElems.length > 0) {\r\n      let nodeId = tempElems[i].id;\r\n      if (tempElems[i].data?.type === \"event\") {\r\n        output.eventKey = tempElems[i].data?.item?.eventKey;\r\n        tempElems.splice(i, 1);\r\n      } else if (tempElems[i].data?.type === \"condition\") {\r\n        output.conditions.push(recursionFormObj(tempElems, nodeId));\r\n        break;\r\n      } else if (\r\n        tempElems.filter(el => el.type === \"btnSelectorNode\").length === 1 &&\r\n        tempElems[i].data?.type === \"action\"\r\n      ) {\r\n        output.conditions.push({\r\n          \"Fn::If\": [[{ noCondition: true }], tempElems[i].data?.item, []]\r\n        });\r\n        // Delete node and edge\r\n        tempElems = tempElems.filter(\r\n          el => el.id !== nodeId && el.target !== nodeId\r\n        );\r\n      } else {\r\n        i++;\r\n      }\r\n    }\r\n\r\n    console.log(\"output\", output);\r\n  };\r\n\r\n  // Handle lose focus on node to hide drawer\r\n  const handleOnSelectionChange = e => {\r\n    if (!e) {\r\n      setShowDrawer(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Background fullHeight color=\"HomePage grey100\">\r\n      {showDrawer && (\r\n        <div className=\"drawer\">\r\n          {showDrawer === \"events\" && (\r\n            <Events\r\n              selectedEventKey={flow.eventKey}\r\n              handleSelect={handleEventChange}\r\n            />\r\n          )}\r\n\r\n          {showDrawer === \"conditions\" && (\r\n            <Conditions\r\n              selectedEventKey={flow.eventKey}\r\n              selectedConditionObj={\r\n                elementsStateRef.current.find(\r\n                  el => el.id === selectedNodeStateRef.current\r\n                )?.data?.item || {}\r\n              }\r\n              handleSelect={handleConditionChange}\r\n            />\r\n          )}\r\n\r\n          {showDrawer === \"actions\" && (\r\n            <Actions\r\n              actionsArr={\r\n                elementsStateRef.current.find(\r\n                  el => el.id === selectedNodeStateRef.current\r\n                )?.data?.item || []\r\n              }\r\n              selectedActionObj={\r\n                (elementsStateRef.current.find(\r\n                  el => el.id === selectedNodeStateRef.current\r\n                )?.data?.item || [])[selectedActionIndex] || {}\r\n              }\r\n              handleSelect={handleActionChange}\r\n            />\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"home-section\">\r\n        <CardHeader handleSave={handleSave}>\r\n          <Typography variant=\"h3\">Map your automation</Typography>\r\n        </CardHeader>\r\n        <div className=\"flow-body\">\r\n          <ReactFlow\r\n            elementsSelectable={true}\r\n            elements={elements}\r\n            onElementsRemove={onElementsRemove}\r\n            onConnect={onConnect}\r\n            nodeTypes={nodeTypes}\r\n            // deleteKeyCode={46} /* 'delete'-key */\r\n            onSelectionChange={handleOnSelectionChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Background>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}