{"version":3,"sources":["components/common/CardHeader/CardHeader.js","components/common/CardBody/CardBody.js","components/ButtonSelectorNode/ButtonSelectorNode.js","constants/constants.js","views/home/HomePage.js"],"names":["CardHeader","props","children","rest","className","IconButton","disableRipple","CardBody","useState","showMore","setShowMore","listItems","selectedId","handleSelect","length","filter","x","includes","id","map","item","Button","onClick","variant","startIcon","name","endIcon","memo","data","isConnectable","Typography","label","eventLabel","disabled","conditions","c","i","Fragment","handleDeleteCondition","actions","a","handleDeleteAction","btnLabel","btnAction","btnLabel2","btnAction2","type","position","style","bottom","top","background","EVENTS","CONDITIONS","ACTIONS","nodeTypes","btnSelectorNode","ButtonSelectorNode","HomePage","showDrawer","setShowDrawer","selectedNode","setSelectedNode","selectedEvent","setSelectedEvent","selectedCondition","setSelectedCondition","selectedAction","setSelectedAction","initialElements","y","elements","setElements","elementsStateRef","useRef","current","selConditionStateRef","selActionStateRef","nodeId","itemId","tempElems","Object","assign","tempElemIndex","findIndex","t","Background","fullHeight","color","find","e","push","source","target","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","deleteKeyCode"],"mappings":"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","file":"static/js/4.d3e8a4a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport \"./CardHeader.scss\";\r\n\r\nconst CardHeader = props => {\r\n  const { children, ...rest } = props;\r\n  return (\r\n    <div className={`CardHeader`} {...rest}>\r\n      {children}\r\n      <IconButton disableRipple>\r\n        <InfoOutlinedIcon />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CardHeader };\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport KeyboardArrowUpOutlinedIcon from \"@material-ui/icons/KeyboardArrowUpOutlined\";\r\nimport KeyboardArrowDownOutlinedIcon from \"@material-ui/icons/KeyboardArrowDownOutlined\";\r\nimport \"./CardBody.scss\";\r\n\r\nconst CardBody = props => {\r\n  const [showMore, setShowMore] = useState(false);\r\n  const { listItems, selectedId, handleSelect, ...rest } = props;\r\n  return (\r\n    <>\r\n      <div\r\n        className={`CardBody ${listItems.length > 3 ? \"has-show-more\" : \"\"} ${\r\n          showMore ? \"show-all\" : \"\"\r\n        }`}\r\n        {...rest}\r\n      >\r\n        {listItems\r\n          .filter(x => !selectedId.includes(x.id))\r\n          .map(item => (\r\n            <Button\r\n              key={item.id}\r\n              onClick={() => handleSelect(item.id)}\r\n              disableRipple\r\n              variant=\"text\"\r\n              className=\"btn-card-item\"\r\n              startIcon={<AddBoxOutlinedIcon />}\r\n            >\r\n              {item.name}\r\n            </Button>\r\n          ))}\r\n      </div>\r\n      {listItems.length > 3 && (\r\n        <div className=\"btn-show-more\">\r\n          <Button\r\n            onClick={() => setShowMore(!showMore)}\r\n            variant=\"text\"\r\n            disableRipple\r\n            endIcon={\r\n              showMore ? (\r\n                <KeyboardArrowUpOutlinedIcon />\r\n              ) : (\r\n                <KeyboardArrowDownOutlinedIcon />\r\n              )\r\n            }\r\n          >\r\n            Show {showMore ? \"less\" : \"more\"}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { CardBody };\r\n","import React, { memo } from \"react\";\r\n\r\nimport { Handle } from \"react-flow-renderer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport \"./ButtonSelectorNode.scss\";\r\n\r\nexport default memo(({ data, isConnectable }) => {\r\n  return (\r\n    <div className=\"ButtonSelectorNode\">\r\n      <div>\r\n        <Typography variant=\"body1\">{data.label}</Typography>\r\n      </div>\r\n      {data.eventLabel && (\r\n        <Button variant=\"contained\" disabled className=\"lbl-event\">\r\n          {data.eventLabel}\r\n        </Button>\r\n      )}\r\n\r\n      {data.conditions?.length > 0 &&\r\n        data.conditions.map((c, i) => (\r\n          <React.Fragment key={c.id}>\r\n            <div className=\"label-div\">\r\n              <Button variant=\"contained\" disabled className=\"lbl-condition\">\r\n                {c.name}\r\n                {/* {data.conditionLabel.join(\" AND \")} */}\r\n              </Button>\r\n              <IconButton\r\n                disableRipple\r\n                onClick={() => data.handleDeleteCondition(c.id)}\r\n              >\r\n                <HighlightOffIcon />\r\n              </IconButton>\r\n              {i !== data.conditions.length - 1 && (\r\n                <Typography variant=\"h6\">AND</Typography>\r\n              )}\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n\r\n      {data.actions?.length > 0 &&\r\n        data.actions.map((a, i) => (\r\n          <React.Fragment key={a.id}>\r\n            <div className=\"label-div\">\r\n              <Button variant=\"contained\" disabled className=\"lbl-action\">\r\n                {a.name}\r\n                {/* {data.actionLabel.join(\" AND \")} */}\r\n              </Button>\r\n              <IconButton\r\n                disableRipple\r\n                onClick={() => data.handleDeleteAction(a.id)}\r\n              >\r\n                <HighlightOffIcon />\r\n              </IconButton>\r\n              {i !== data.actions.length - 1 && (\r\n                <Typography variant=\"h6\">AND</Typography>\r\n              )}\r\n            </div>\r\n          </React.Fragment>\r\n        ))}\r\n\r\n      {data.btnLabel && (\r\n        <Button onClick={() => data.btnAction()} variant=\"contained\">\r\n          {data.btnLabel}\r\n        </Button>\r\n      )}\r\n\r\n      {data.btnLabel2 && (\r\n        <Button onClick={() => data.btnAction2()} variant=\"contained\">\r\n          {data.btnLabel2}\r\n        </Button>\r\n      )}\r\n\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        style={{ bottom: 10, top: \"auto\", background: \"#555\" }}\r\n        isConnectable={isConnectable}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","export const EVENTS = [\r\n  { id: 1, name: \"New order placed\" },\r\n  { id: 2, name: \"New signup\" },\r\n  { id: 3, name: \"New subscriber\" },\r\n  { id: 4, name: \"New cancellation\" }\r\n];\r\n\r\nexport const CONDITIONS = [\r\n  { id: 1, name: \"Amount > 100\" },\r\n  { id: 2, name: \"Amount < 100\" },\r\n  { id: 3, name: \"Product is Coffee\" },\r\n  { id: 4, name: \"Product is Tea\" },\r\n  { id: 5, name: \"Date > Today\" },\r\n  { id: 6, name: \"Date < Today\" }\r\n];\r\nexport const ACTIONS = [\r\n  { id: 1, name: \"Send email to Contact\" },\r\n  { id: 2, name: \"Add tag to Contact\" },\r\n  { id: 3, name: \"Call Contact\" },\r\n  { id: 4, name: \"Cancel Contact\" },\r\n  { id: 5, name: \"Delete Contact\" }\r\n];\r\n","import React, { useState, useRef } from \"react\";\r\nimport ReactFlow, { removeElements, addEdge } from \"react-flow-renderer\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Background } from \"components/common/Background/Background\";\r\nimport { CardHeader } from \"components/common/CardHeader/CardHeader\";\r\nimport { CardBody } from \"components/common/CardBody/CardBody\";\r\nimport ButtonSelectorNode from \"components/ButtonSelectorNode/ButtonSelectorNode\";\r\n\r\nimport \"./HomePage.scss\";\r\nimport { ACTIONS, CONDITIONS, EVENTS } from \"constants/constants\";\r\n\r\nconst nodeTypes = {\r\n  btnSelectorNode: ButtonSelectorNode\r\n};\r\n\r\nfunction HomePage() {\r\n  const [showDrawer, setShowDrawer] = useState(\"events\");\r\n  const [selectedNode, setSelectedNode] = useState(\"1\");\r\n  const [selectedEvent, setSelectedEvent] = useState([]);\r\n  const [selectedCondition, setSelectedCondition] = useState([]);\r\n  const [selectedAction, setSelectedAction] = useState([]);\r\n\r\n  const initialElements = [\r\n    {\r\n      id: \"1\",\r\n      type: \"btnSelectorNode\",\r\n      data: {\r\n        label: \"When\",\r\n        type: \"event\",\r\n        btnLabel: \"Select event trigger\",\r\n        btnAction: () => setShowDrawer(\"events\")\r\n      },\r\n      position: { x: 250, y: 25 }\r\n    }\r\n  ];\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onElementsRemove = elementsToRemove =>\r\n    setElements(els => removeElements(elementsToRemove, els));\r\n  const onConnect = params => setElements(els => addEdge(params, els));\r\n  const elementsStateRef = useRef();\r\n  elementsStateRef.current = elements;\r\n  const selConditionStateRef = useRef();\r\n  selConditionStateRef.current = selectedCondition;\r\n  const selActionStateRef = useRef();\r\n  selActionStateRef.current = selectedCondition;\r\n\r\n  const handleEventChange = id => {\r\n    setSelectedEvent([id]);\r\n    let tempElems = Object.assign([], elements);\r\n    tempElems[0] = {\r\n      id: \"1\",\r\n      type: \"btnSelectorNode\",\r\n      data: {\r\n        label: \"When\",\r\n        type: \"event\",\r\n        eventLabel: EVENTS.find(e => e.id === id).name,\r\n        btnLabel: \"Select event trigger\",\r\n        btnAction: () => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(\"1\");\r\n        }\r\n      },\r\n      position: { x: 250, y: 25 }\r\n    };\r\n\r\n    if (tempElems.length === 1) {\r\n      tempElems.push(\r\n        {\r\n          id: \"2\",\r\n          type: \"btnSelectorNode\",\r\n          data: {\r\n            label: `If...`,\r\n            type: \"condition\",\r\n            btnLabel: \"Add condition\",\r\n            btnAction: () => {\r\n              setShowDrawer(\"conditions\");\r\n              setSelectedNode(\"2\");\r\n            },\r\n            handleDeleteCondition: itemId => handleDeleteCondition(\"2\", itemId)\r\n          },\r\n          position: { x: 250, y: 200 }\r\n        },\r\n        {\r\n          id: \"3\",\r\n          type: \"btnSelectorNode\",\r\n          data: {\r\n            label: `Then...`,\r\n            type: \"condition\",\r\n            // btnLabel: \"Add condition\",\r\n            // btnAction: () => {\r\n            //   setShowDrawer(\"conditions\");\r\n            //   setSelectedNode(\"3\");\r\n            // },\r\n            btnLabel2: \"Add action\",\r\n            btnAction2: () => {\r\n              setShowDrawer(\"actions\");\r\n              setSelectedNode(\"3\");\r\n            },\r\n            handleDeleteAction: itemId => handleDeleteAction(\"3\", itemId)\r\n          },\r\n          position: { x: 250, y: 600 }\r\n        },\r\n        {\r\n          id: \"4\",\r\n          type: \"btnSelectorNode\",\r\n          data: {\r\n            label: `Then...`,\r\n            type: \"condition\",\r\n            // btnLabel: \"Add condition\",\r\n            // btnAction: () => {\r\n            //   setShowDrawer(\"conditions\");\r\n            //   setSelectedNode(\"4\");\r\n            // },\r\n            btnLabel2: \"Add action\",\r\n            btnAction2: () => {\r\n              setShowDrawer(\"actions\");\r\n              setSelectedNode(\"4\");\r\n            },\r\n            handleDeleteAction: itemId => handleDeleteAction(\"4\", itemId)\r\n          },\r\n          position: { x: 500, y: 350 }\r\n        },\r\n        {\r\n          id: \"edges-1-2\",\r\n          source: \"1\",\r\n          target: \"2\",\r\n          type: \"smoothstep\"\r\n        },\r\n        {\r\n          id: \"edges-2-3\",\r\n          source: \"2\",\r\n          target: \"3\",\r\n          type: \"smoothstep\",\r\n          label: \"yes\"\r\n        },\r\n        {\r\n          id: \"edges-2-4\",\r\n          source: \"2\",\r\n          target: \"4\",\r\n          type: \"smoothstep\",\r\n          label: \"no\"\r\n        }\r\n      );\r\n    }\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleConditionChange = id => {\r\n    setSelectedCondition([...selectedCondition, id]);\r\n    let tempElems = Object.assign([], elements);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === selectedNode);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        conditions: [\r\n          ...(tempElems[tempElemIndex].data?.conditions || []),\r\n          CONDITIONS.find(e => e.id === id)\r\n        ]\r\n      }\r\n    };\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleActionChange = id => {\r\n    setSelectedAction([...selectedAction, id]);\r\n    let tempElems = Object.assign([], elements);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === selectedNode);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        actions: [\r\n          ...(tempElems[tempElemIndex].data?.actions || []),\r\n          ACTIONS.find(e => e.id === id)\r\n        ]\r\n      }\r\n    };\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleDeleteCondition = (nodeId, itemId) => {\r\n    let tempElems = Object.assign([], elementsStateRef.current);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === nodeId);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        conditions: (tempElems[tempElemIndex].data?.conditions || []).filter(\r\n          t => t.id !== itemId\r\n        )\r\n      }\r\n    };\r\n    setSelectedCondition(\r\n      selConditionStateRef.current.filter(c => c !== itemId)\r\n    );\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleDeleteAction = (nodeId, itemId) => {\r\n    let tempElems = Object.assign([], elementsStateRef.current);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === nodeId);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        actions: (tempElems[tempElemIndex].data?.actions || []).filter(\r\n          t => t.id !== itemId\r\n        )\r\n      }\r\n    };\r\n    setSelectedAction(selActionStateRef.current.filter(a => a !== itemId));\r\n    setElements(tempElems);\r\n  };\r\n\r\n  return (\r\n    <Background fullHeight color=\"HomePage grey100\">\r\n      <div className=\"drawer\">\r\n        {showDrawer === \"events\" && (\r\n          <>\r\n            <CardHeader>\r\n              <Typography variant=\"h3\">Events</Typography>\r\n            </CardHeader>\r\n            <CardBody\r\n              listItems={EVENTS}\r\n              selectedId={selectedEvent}\r\n              handleSelect={handleEventChange}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {showDrawer === \"conditions\" && (\r\n          <>\r\n            <CardHeader>\r\n              <Typography variant=\"h3\">Conditions</Typography>\r\n            </CardHeader>\r\n            <CardBody\r\n              listItems={CONDITIONS}\r\n              selectedId={selectedCondition}\r\n              handleSelect={handleConditionChange}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {showDrawer === \"actions\" && (\r\n          <>\r\n            <CardHeader>\r\n              <Typography variant=\"h3\">Actions</Typography>\r\n            </CardHeader>\r\n            <CardBody\r\n              listItems={ACTIONS}\r\n              selectedId={selectedAction}\r\n              handleSelect={handleActionChange}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"home-section\">\r\n        <CardHeader>\r\n          <Typography variant=\"h3\">Map your automation</Typography>\r\n        </CardHeader>\r\n        <div className=\"flow-body\">\r\n          <ReactFlow\r\n            elements={elements}\r\n            onElementsRemove={onElementsRemove}\r\n            onConnect={onConnect}\r\n            nodeTypes={nodeTypes}\r\n            deleteKeyCode={46} /* 'delete'-key */\r\n          />\r\n        </div>\r\n      </div>\r\n    </Background>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}