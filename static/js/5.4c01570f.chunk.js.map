{"version":3,"sources":["components/common/CardHeader/CardHeader.js","constants/constants.js","components/ButtonSelectorNode/ButtonSelectorNode.js","components/common/CardBody/CardBody.js","views/preview/PreviewPage.js"],"names":["CardHeader","props","handleSave","hasPreviewButton","children","rest","history","useHistory","className","disableRipple","variant","onClick","push","pathname","EVENTS","id","name","CONDITIONS","ACTIONS","type","label","SAMPLE_EVENT_TRIGGERS","eventKey","eventDisplay","fields","conditionKey","conditionDisplay","options","SAMPLE_ACTIONS","actionKey","actionDisplay","key","placeHolder","option","CONDITION_OPERATORS","value","memo","data","isConnectable","selectedElements","useStoreState","store","focusNodeAction","item","disabled","btnLabel","e","btnAction","stopPropagation","handleSwapConditionArrows","Object","keys","includes","values","map","cond","operator","join","replace","length","a","i","Fragment","handleSelectAction","actionInputs","ai","handleDeleteAction","btnLabel2","btnAction2","position","style","bottom","top","background","CardBody","useState","showMore","setShowMore","listItems","nodeId","selectedId","onFocusId","handleSelect","filter","x","Button","startIcon","endIcon","nodeTypes","btnSelectorNode","ButtonSelectorNode","PreviewPage","showDrawer","setShowDrawer","selectedNode","setSelectedNode","selectedEvent","setSelectedEvent","selectedCondition","setSelectedCondition","selectedAction","setSelectedAction","clickedAction","setClickedAction","inputArr","event","conditions","action","initialElements","y","forEach","input","toString","source","target","Number","handleDeleteCondition","itemId","actions","generateInitialElements","elements","setElements","elementsStateRef","useRef","current","selectedNodeStateRef","selConditionStateRef","selActionStateRef","generateNextStepNodeObj","tempElems","assign","t","tempElemIndex","findIndex","c","Background","fullHeight","color","Typography","find","prev","TextField","fullWidth","margin","onChange","nodes","el","outputArr","node","condition","console","log","elementsSelectable","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","deleteKeyCode","onSelectionChange"],"mappings":"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","file":"static/js/5.4c01570f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./CardHeader.scss\";\r\n\r\nconst CardHeader = props => {\r\n  const { handleSave, hasPreviewButton, children, ...rest } = props;\r\n  const history = useHistory();\r\n\r\n  const navToPreview = () => {\r\n    history.push({ pathname: \"/preview\" });\r\n  };\r\n  return (\r\n    <div className={`CardHeader`} {...rest}>\r\n      <div className=\"left-section\">\r\n        {children}\r\n        <IconButton disableRipple>\r\n          <InfoOutlinedIcon />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"d-flex\">\r\n        {hasPreviewButton && (\r\n          <Button variant=\"text\" className=\"btn-preview\" onClick={navToPreview}>\r\n            Go to Preview\r\n          </Button>\r\n        )}\r\n        {handleSave && (\r\n          <Button variant=\"contained\" onClick={handleSave}>\r\n            Save\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CardHeader };\r\n","export const EVENTS = [\r\n  { id: 1, name: \"New order placed\" },\r\n  { id: 2, name: \"New signup\" },\r\n  { id: 3, name: \"New subscriber\" },\r\n  { id: 4, name: \"New cancellation\" }\r\n];\r\n\r\nexport const CONDITIONS = [\r\n  { id: 1, name: \"Amount > 100\" },\r\n  { id: 2, name: \"Amount < 100\" },\r\n  { id: 3, name: \"Product is Coffee\" },\r\n  { id: 4, name: \"Product is Tea\" },\r\n  { id: 5, name: \"Date > Today\" },\r\n  { id: 6, name: \"Date < Today\" }\r\n];\r\nexport const ACTIONS = [\r\n  {\r\n    id: 1,\r\n    name: \"Send email to Contact\",\r\n    type: \"email\",\r\n    label: \"Email address\"\r\n  },\r\n  { id: 2, name: \"Call Contact\", type: \"tel\", label: \"Contact Number\" },\r\n  { id: 3, name: \"Add Tag to Contact\", type: \"tel\", label: \"Contact Number\" },\r\n  { id: 4, name: \"Remove Contact\", type: \"tel\", label: \"Contact Number\" }\r\n];\r\n\r\nexport const SAMPLE_EVENT_TRIGGERS = [\r\n  {\r\n    eventKey: \"NewOrder\",\r\n    eventDisplay: \"New order placed\",\r\n    fields: [\r\n      {\r\n        conditionKey: \"ProductTitle\",\r\n        conditionDisplay: \"Product Title\",\r\n        type: \"string\"\r\n      },\r\n      {\r\n        conditionKey: \"ProductAmount\",\r\n        conditionDisplay: \"Product Amount\",\r\n        type: \"int\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    eventKey: \"NewSignup\",\r\n    eventDisplay: \"New signup\",\r\n    fields: [\r\n      {\r\n        conditionKey: \"Gender\",\r\n        conditionDisplay: \"Customer Gender\",\r\n        type: \"option\",\r\n        options: [\"Male\", \"Female\"]\r\n      },\r\n      { conditionKey: \"DOB\", conditionDisplay: \"Birthday\", type: \"date\" }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const SAMPLE_ACTIONS = [\r\n  {\r\n    actionKey: \"SendEmail\",\r\n    actionDisplay: \"Send email to contact\",\r\n    fields: [\r\n      { key: \"emailAddress\", placeHolder: \"Email Address\", type: \"string\" }\r\n    ]\r\n  },\r\n  {\r\n    actionKey: \"CallContact\",\r\n    actionDisplay: \"Call contact\",\r\n    fields: [\r\n      { key: \"callContact\", placeHolder: \"Contact Number\", type: \"string\" },\r\n      {\r\n        key: \"callContactCountry\",\r\n        placeHolder: \"Country\",\r\n        type: \"selection\",\r\n        option: [\"Singapore\", \"Malaysia\"]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nexport const CONDITION_OPERATORS = [\r\n  { name: \"Equal\", value: \"=\", type: \"string\" },\r\n  { name: \"Not equal\", value: \"!=\", type: \"string\" },\r\n  { name: \"Contains\", value: \"contains\", type: \"string\" },\r\n  { name: \"Not contains\", value: \"not contains\", type: \"string\" },\r\n  { name: \"Greater than\", value: \">\", type: \"int\" },\r\n  { name: \"Less than\", value: \"<\", type: \"int\" },\r\n  { name: \"Greater and equal than\", value: \">=\", type: \"int\" },\r\n  { name: \"Less and equal than\", value: \"<=\", type: \"int\" },\r\n  { name: \"Equal\", value: \"=\", type: \"date\" },\r\n  { name: \"Earlier than\", value: \"earlier than\", type: \"date\" },\r\n  { name: \"Later than\", value: \"later than\", type: \"date\" }\r\n];\r\n\r\nexport const SAMPLE_FLOW = {\r\n  eventKey: \"NewOrder\",\r\n  conditions: [\r\n    {\r\n      \"Fn::If\": [\r\n        [\r\n          {\r\n            \"Fn::And\": [\r\n              {\r\n                conditionKey: \"ProductTitle\",\r\n                value: [\"coke\", \"pepsi\"],\r\n                operator: \"contains\"\r\n              },\r\n              {\r\n                conditionKey: \"ProductAmount\",\r\n                value: [\"30\"],\r\n                operator: \">=\"\r\n              }\r\n            ]\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            \"Fn::If\": [\r\n              [\r\n                {\r\n                  conditionKey: \"ProductTitle\",\r\n                  value: [\"coke\"],\r\n                  operator: \"=\"\r\n                }\r\n              ],\r\n              [\r\n                {\r\n                  actionKey: \"CallContact\",\r\n                  actionInputs: [\r\n                    {\r\n                      key: \"callContact\",\r\n                      value: \"999\"\r\n                    },\r\n                    {\r\n                      key: \"callContactCountry\",\r\n                      value: \"Singapore\"\r\n                    }\r\n                  ]\r\n                }\r\n              ],\r\n              [\r\n                {\r\n                  actionKey: \"SendEmail\",\r\n                  actionInputs: [\r\n                    {\r\n                      key: \"sendEmail\",\r\n                      value: \"simon@gmail.com\"\r\n                    }\r\n                  ]\r\n                }\r\n              ]\r\n            ]\r\n          }\r\n        ],\r\n        [\r\n          {\r\n            actionKey: \"CallContact\",\r\n            actionInputs: [\r\n              {\r\n                key: \"callContact\",\r\n                value: \"0123456789\"\r\n              },\r\n              {\r\n                key: \"callContactCountry\",\r\n                value: \"Malaysia\"\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            actionKey: \"SendEmail\",\r\n            actionInputs: [\r\n              {\r\n                key: \"sendEmail\",\r\n                value: \"hello@gmail.com\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      ]\r\n    }\r\n  ]\r\n};\r\n","import React, { memo } from \"react\";\r\n\r\nimport { Handle, useStoreState } from \"react-flow-renderer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport LoopIcon from \"@material-ui/icons/Loop\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport \"./ButtonSelectorNode.scss\";\r\n\r\nexport default memo(({ id, data, isConnectable }) => {\r\n  const selectedElements = useStoreState(store => store.selectedElements);\r\n\r\n  return (\r\n    <div\r\n      className={`ButtonSelectorNode ${\r\n        selectedElements && selectedElements[0].id === id ? \"is-selected\" : \"\"\r\n      }`}\r\n      onClick={() => data.focusNodeAction(id)}\r\n    >\r\n      <div>\r\n        <Typography variant=\"body1\">{data.label}</Typography>\r\n      </div>\r\n\r\n      {data.type === \"event\" &&\r\n        (data.item ? (\r\n          <Button variant=\"contained\" disabled className=\"lbl-event\">\r\n            {data.item?.eventDisplay}\r\n          </Button>\r\n        ) : (\r\n          data.btnLabel && (\r\n            <Button\r\n              onClick={e => {\r\n                data.btnAction(id);\r\n                e.stopPropagation();\r\n              }}\r\n              variant=\"contained\"\r\n            >\r\n              {data.btnLabel}\r\n            </Button>\r\n          )\r\n        ))}\r\n\r\n      {(data.type === \"condition\" || data.type === \"choice\") && (\r\n        <>\r\n          {data.type === \"condition\" && (\r\n            <IconButton\r\n              disableRipple\r\n              className=\"btn-swap\"\r\n              onClick={e => {\r\n                data.handleSwapConditionArrows(id);\r\n                e.stopPropagation();\r\n              }}\r\n            >\r\n              <LoopIcon />\r\n            </IconButton>\r\n          )}\r\n          {data.item ? (\r\n            <Button variant=\"contained\" disabled className=\"lbl-condition\">\r\n              {Object.keys(data.item)[0].includes(\"Fn::\")\r\n                ? Object.values(data.item)[0]\r\n                    .map(\r\n                      cond =>\r\n                        `${cond.conditionKey} ${\r\n                          cond.operator\r\n                        } ${cond.value.join(\", \")}`\r\n                    )\r\n                    .join(` ${Object.keys(data.item)[0].replace(\"Fn::\", \"\")} `)\r\n                : `${data.item.conditionKey} ${\r\n                    data.item.operator\r\n                  } ${data.item.value.join(\", \")}`}\r\n            </Button>\r\n          ) : (\r\n            data.btnLabel && (\r\n              <Button\r\n                onClick={e => {\r\n                  data.btnAction(id);\r\n                  e.stopPropagation();\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                {data.btnLabel}\r\n              </Button>\r\n            )\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {/* type === 'action' || type === 'action-yes' */}\r\n      {data.type.includes(\"action\") &&\r\n        (data.item?.length\r\n          ? data.item.map((a, i) => (\r\n              <React.Fragment key={i}>\r\n                <div className=\"label-div\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={e => {\r\n                      data.handleSelectAction(id, i);\r\n                      e.stopPropagation();\r\n                    }}\r\n                    className=\"lbl-action\"\r\n                  >\r\n                    {`Action: ${a.actionKey}\r\n                    ${a.actionInputs\r\n                      .map(ai => `${ai.key} - ${ai.value}`)\r\n                      .join(\", \")}`}\r\n                  </Button>\r\n                  <IconButton\r\n                    disableRipple\r\n                    onClick={e => {\r\n                      data.handleDeleteAction(id, i);\r\n                      e.stopPropagation();\r\n                    }}\r\n                  >\r\n                    <HighlightOffIcon />\r\n                  </IconButton>\r\n                  {i !== data.item.length - 1 && (\r\n                    <Typography variant=\"h6\">AND</Typography>\r\n                  )}\r\n                </div>\r\n              </React.Fragment>\r\n            ))\r\n          : data.btnLabel && (\r\n              <Button\r\n                onClick={e => {\r\n                  data.btnAction(id);\r\n                  e.stopPropagation();\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                {data.btnLabel}\r\n              </Button>\r\n            ))}\r\n\r\n      {data.type === \"choice\" && (\r\n        <Typography variant=\"h6\" className=\"text-or\">\r\n          OR\r\n        </Typography>\r\n      )}\r\n\r\n      {data.btnLabel2 && (\r\n        <Button\r\n          onClick={e => {\r\n            data.btnAction2(id);\r\n            e.stopPropagation();\r\n          }}\r\n          variant=\"contained\"\r\n        >\r\n          {data.btnLabel2}\r\n        </Button>\r\n      )}\r\n\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        style={{ bottom: 10, top: \"auto\", background: \"#555\" }}\r\n        isConnectable={isConnectable}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport KeyboardArrowUpOutlinedIcon from \"@material-ui/icons/KeyboardArrowUpOutlined\";\r\nimport KeyboardArrowDownOutlinedIcon from \"@material-ui/icons/KeyboardArrowDownOutlined\";\r\nimport \"./CardBody.scss\";\r\n\r\nconst CardBody = props => {\r\n  const [showMore, setShowMore] = useState(false);\r\n  const {\r\n    type,\r\n    listItems,\r\n    nodeId,\r\n    selectedId,\r\n    onFocusId,\r\n    handleSelect,\r\n    ...rest\r\n  } = props;\r\n  return (\r\n    <>\r\n      <div\r\n        className={`CardBody ${listItems.length > 3 ? \"has-show-more\" : \"\"} ${\r\n          showMore ? \"show-all\" : \"\"\r\n        }`}\r\n        {...rest}\r\n      >\r\n        {(type === \"actions\" || type === \"conditions\"\r\n          ? listItems.filter(x => !selectedId[nodeId]?.includes(x.id))\r\n          : listItems.filter(x => !selectedId.includes(x.id))\r\n        ).map(item => (\r\n          <Button\r\n            key={item.id}\r\n            onClick={() => handleSelect(item.id)}\r\n            disableRipple\r\n            variant=\"text\"\r\n            className={`btn-card-item ${\r\n              onFocusId === item.id ? \"on-focus\" : \"\"\r\n            }`}\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n          >\r\n            {item.name}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n      {listItems.length > 3 && (\r\n        <div className=\"btn-show-more\">\r\n          <Button\r\n            onClick={() => setShowMore(!showMore)}\r\n            variant=\"text\"\r\n            disableRipple\r\n            endIcon={\r\n              showMore ? (\r\n                <KeyboardArrowUpOutlinedIcon />\r\n              ) : (\r\n                <KeyboardArrowDownOutlinedIcon />\r\n              )\r\n            }\r\n          >\r\n            Show {showMore ? \"less\" : \"more\"}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { CardBody };\r\n","import React, { useState, useRef } from \"react\";\r\nimport ReactFlow, { removeElements, addEdge } from \"react-flow-renderer\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Background } from \"components/common/Background/Background\";\r\nimport { CardHeader } from \"components/common/CardHeader/CardHeader\";\r\nimport { CardBody } from \"components/common/CardBody/CardBody\";\r\nimport ButtonSelectorNode from \"components/ButtonSelectorNode/ButtonSelectorNode\";\r\nimport { ACTIONS, CONDITIONS, EVENTS } from \"constants/constants\";\r\n\r\nimport \"./PreviewPage.scss\";\r\n\r\nconst nodeTypes = {\r\n  btnSelectorNode: ButtonSelectorNode\r\n};\r\n\r\nfunction PreviewPage() {\r\n  const [showDrawer, setShowDrawer] = useState(\"events\");\r\n  const [selectedNode, setSelectedNode] = useState(\"1\");\r\n  const [selectedEvent, setSelectedEvent] = useState([]);\r\n  const [selectedCondition, setSelectedCondition] = useState({});\r\n  const [selectedAction, setSelectedAction] = useState({});\r\n  const [clickedAction, setClickedAction] = useState(null);\r\n\r\n  const inputArr = [\r\n    {\r\n      event: {\r\n        id: 1,\r\n        name: \"New order placed\"\r\n      }\r\n    },\r\n    {\r\n      conditions: [\r\n        {\r\n          id: 1,\r\n          name: \"Amount > 100\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"action-yes\": [\r\n        {\r\n          id: 2,\r\n          label: \"Call Contact\",\r\n          name: \"Call Contact\",\r\n          type: \"tel\",\r\n          value: \"888\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      action: [\r\n        {\r\n          id: 2,\r\n          label: \"Contact Number\",\r\n          name: \"Call Contact\",\r\n          type: \"tel\",\r\n          value: \"999\"\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const generateInitialElements = () => {\r\n    const initialElements = [];\r\n    let nodeId = 1;\r\n    let position = { x: 250, y: 25 };\r\n    inputArr.forEach(input => {\r\n      switch (Object.keys(input)[0]) {\r\n        case \"event\":\r\n          initialElements.push(\r\n            {\r\n              id: nodeId.toString(),\r\n              type: \"btnSelectorNode\",\r\n              data: {\r\n                label: \"When\",\r\n                type: \"event\",\r\n                btnLabel: \"Select event trigger\",\r\n                focusNodeAction: id => {\r\n                  setShowDrawer(\"events\");\r\n                  setSelectedNode(id);\r\n                },\r\n                btnAction: id => {\r\n                  setShowDrawer(\"events\");\r\n                  setSelectedNode(id);\r\n                },\r\n                ...input\r\n              },\r\n              position: position\r\n            },\r\n            {\r\n              id: `edges-${nodeId.toString()}-${nodeId + 1}`, // edges-1-2\r\n              source: nodeId.toString(),\r\n              target: (Number(nodeId) + 1).toString(),\r\n              type: \"smoothstep\"\r\n            }\r\n          );\r\n          break;\r\n        case \"conditions\":\r\n          position = { x: position.x, y: position.y + 175 };\r\n          ++nodeId;\r\n          initialElements.push(\r\n            {\r\n              id: nodeId.toString(),\r\n              type: \"btnSelectorNode\",\r\n              data: {\r\n                label: \"If...\",\r\n                type: \"condition\",\r\n                btnLabel: \"Add condition\",\r\n                focusNodeAction: id => {\r\n                  setShowDrawer(\"conditions\");\r\n                  setSelectedNode(id);\r\n                },\r\n                btnAction: id => {\r\n                  setShowDrawer(\"conditions\");\r\n                  setSelectedNode(id);\r\n                },\r\n                handleDeleteCondition: (nodeId, itemId) =>\r\n                  handleDeleteCondition(nodeId, itemId),\r\n                ...input\r\n              },\r\n              position: position\r\n            },\r\n            {\r\n              id: `edges-${nodeId.toString()}-${nodeId + 1}`, // edges-2-3\r\n              source: nodeId.toString(),\r\n              target: (Number(nodeId) + 1).toString(),\r\n              type: \"smoothstep\",\r\n              label: \"yes\"\r\n            },\r\n            {\r\n              id: `edges-${nodeId.toString()}-${nodeId + 2}`, // edges-2-4\r\n              source: nodeId.toString(),\r\n              target: (Number(nodeId) + 2).toString(),\r\n              type: \"smoothstep\",\r\n              label: \"no\"\r\n            }\r\n          );\r\n          break;\r\n        case \"action-yes\":\r\n          position = { x: position.x, y: position.y + 400 };\r\n          ++nodeId;\r\n          initialElements.push({\r\n            id: nodeId.toString(),\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `Then...`,\r\n              type: \"action-yes\",\r\n              btnLabel: \"Add action\",\r\n              focusNodeAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n              },\r\n              btnAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n              },\r\n              handleDeleteCondition: (nodeId, itemId) =>\r\n                handleDeleteCondition(nodeId, itemId),\r\n              actions: input[\"action-yes\"]\r\n            },\r\n            position: position\r\n          });\r\n          break;\r\n        case \"action\":\r\n          position = { x: position.x + 300, y: position.y };\r\n          ++nodeId;\r\n          initialElements.push({\r\n            id: nodeId.toString(),\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `Then...`,\r\n              type: \"action\",\r\n              btnLabel: \"Add action\",\r\n              focusNodeAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n              },\r\n              btnAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n              },\r\n              handleDeleteCondition: (nodeId, itemId) =>\r\n                handleDeleteCondition(nodeId, itemId),\r\n              actions: input[\"action\"]\r\n            },\r\n            position: position\r\n          });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    return initialElements;\r\n  };\r\n\r\n  const [elements, setElements] = useState(generateInitialElements());\r\n  const onElementsRemove = elementsToRemove =>\r\n    setElements(els => removeElements(elementsToRemove, els));\r\n  const onConnect = params => setElements(els => addEdge(params, els));\r\n  const elementsStateRef = useRef();\r\n  elementsStateRef.current = elements;\r\n  const selectedNodeStateRef = useRef();\r\n  selectedNodeStateRef.current = selectedNode;\r\n  const selConditionStateRef = useRef();\r\n  selConditionStateRef.current = selectedCondition;\r\n  const selActionStateRef = useRef();\r\n  selActionStateRef.current = selectedAction;\r\n\r\n  const generateNextStepNodeObj = (nodeId, position) => {\r\n    return {\r\n      label: `Next Step`,\r\n      type: \"choice\",\r\n      btnLabel: \"Add condition\",\r\n      focusNodeAction: id => {\r\n        setShowDrawer(null);\r\n        setSelectedNode(id);\r\n      },\r\n      btnAction: id => {\r\n        setShowDrawer(\"conditions\");\r\n        setSelectedNode(id);\r\n\r\n        let tempElems = Object.assign([], elementsStateRef.current);\r\n        tempElems = tempElems.filter(\r\n          t =>\r\n            t.id !== nodeId &&\r\n            t.id !== `edges-${(Number(nodeId) - 1).toString()}-${nodeId}`\r\n        );\r\n        tempElems.push(\r\n          {\r\n            id: nodeId, // 2\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `If...`,\r\n              type: \"condition\",\r\n              btnLabel: \"Add condition\",\r\n              focusNodeAction: id => {\r\n                setShowDrawer(\"conditions\");\r\n                setSelectedNode(id);\r\n              },\r\n              btnAction: id => {\r\n                setShowDrawer(\"conditions\");\r\n                setSelectedNode(id);\r\n              },\r\n              handleDeleteCondition: (nodeId, itemId) =>\r\n                handleDeleteCondition(nodeId, itemId)\r\n            },\r\n            position: position\r\n          },\r\n          {\r\n            id: (Number(nodeId) + 1).toString(), // 3\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `Then...`,\r\n              type: \"action-yes\",\r\n              btnLabel: \"Add action\",\r\n              focusNodeAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n              },\r\n              btnAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n              },\r\n              handleDeleteAction: (nodeId, itemId) =>\r\n                handleDeleteAction(nodeId, itemId)\r\n            },\r\n            position: { x: position.x, y: position.y + 400 }\r\n          },\r\n          {\r\n            id: (Number(nodeId) + 2).toString(), // 4\r\n            type: \"btnSelectorNode\",\r\n            data: generateNextStepNodeObj((Number(nodeId) + 2).toString(), {\r\n              x: position.x + 300,\r\n              y: position.y + 150\r\n            }),\r\n            position: { x: position.x + 300, y: position.y + 150 }\r\n          },\r\n          ...(nodeId === \"2\"\r\n            ? [\r\n                {\r\n                  id: `edges-${(Number(nodeId) - 1).toString()}-${nodeId}`, // edges-1-2\r\n                  source: (Number(nodeId) - 1).toString(),\r\n                  target: nodeId,\r\n                  type: \"smoothstep\"\r\n                }\r\n              ]\r\n            : []),\r\n          {\r\n            id: `edges-${nodeId}-${(Number(nodeId) + 1).toString()}`, // edges-2-3\r\n            source: nodeId,\r\n            target: (Number(nodeId) + 1).toString(),\r\n            type: \"smoothstep\",\r\n            label: \"yes\"\r\n          },\r\n          {\r\n            id: `edges-${nodeId}-${(Number(nodeId) + 2).toString()}`, // edges-2-4\r\n            source: nodeId,\r\n            target: (Number(nodeId) + 2).toString(),\r\n            type: \"smoothstep\",\r\n            label: \"no\"\r\n          }\r\n        );\r\n        setElements(tempElems);\r\n      },\r\n      btnLabel2: \"Add Action\",\r\n      btnAction2: id => {\r\n        setShowDrawer(\"actions\");\r\n        setSelectedNode(id);\r\n\r\n        let tempElems = Object.assign([], elementsStateRef.current);\r\n        tempElems = tempElems.filter(\r\n          t =>\r\n            t.id !== nodeId &&\r\n            t.id !== `edges-${(Number(nodeId) - 1).toString()}-${nodeId}` // edges-1-2\r\n        );\r\n        tempElems.push(\r\n          {\r\n            id: nodeId,\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `Then...`,\r\n              type: \"action\",\r\n              btnLabel: \"Add action\",\r\n              focusNodeAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n              },\r\n              btnAction: id => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(id);\r\n              },\r\n              handleDeleteAction: (nodeId, itemId) =>\r\n                handleDeleteAction(nodeId, itemId)\r\n            },\r\n            position: position\r\n          },\r\n          ...(nodeId === \"2\"\r\n            ? [\r\n                {\r\n                  id: `edges-${(Number(nodeId) - 1).toString()}-${nodeId}`, // edges-1-2\r\n                  source: (Number(nodeId) - 1).toString(),\r\n                  target: nodeId,\r\n                  type: \"smoothstep\"\r\n                }\r\n              ]\r\n            : [])\r\n        );\r\n\r\n        setElements(tempElems);\r\n      },\r\n      handleDeleteCondition: (nodeId, itemId) =>\r\n        handleDeleteCondition(nodeId, itemId)\r\n    };\r\n  };\r\n\r\n  const handleEventChange = id => {\r\n    setSelectedEvent([id]);\r\n    let tempElems = Object.assign([], elements);\r\n    tempElems[0] = {\r\n      id: \"1\",\r\n      type: \"btnSelectorNode\",\r\n      data: {\r\n        label: \"When\",\r\n        type: \"event\",\r\n        event: EVENTS.find(e => e.id === id),\r\n        focusNodeAction: id => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(id);\r\n        },\r\n        btnAction: id => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(id);\r\n        }\r\n      },\r\n      position: { x: 250, y: 25 }\r\n    };\r\n\r\n    if (tempElems.length === 1) {\r\n      tempElems.push(\r\n        {\r\n          id: \"2\",\r\n          type: \"btnSelectorNode\",\r\n          data: generateNextStepNodeObj(\"2\", { x: 250, y: 200 }),\r\n          position: { x: 250, y: 200 }\r\n        },\r\n        {\r\n          id: \"edges-1-2\",\r\n          source: \"1\",\r\n          target: \"2\",\r\n          type: \"smoothstep\"\r\n        }\r\n      );\r\n    }\r\n    setShowDrawer(null);\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleConditionChange = id => {\r\n    setSelectedCondition(prev => ({\r\n      ...prev,\r\n      [selectedNode]: [...(selectedCondition[selectedNode] || []), id]\r\n    }));\r\n    let tempElems = Object.assign([], elements);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === selectedNode);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        conditions: [\r\n          ...(tempElems[tempElemIndex].data?.conditions || []),\r\n          CONDITIONS.find(e => e.id === id)\r\n        ]\r\n      }\r\n    };\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleActionChange = id => {\r\n    setClickedAction(ACTIONS.find(a => a.id === id));\r\n  };\r\n\r\n  const handleAddAction = () => {\r\n    setSelectedAction(prev => ({\r\n      ...prev,\r\n      [selectedNode]: [\r\n        ...(selectedAction[selectedNode] || []),\r\n        clickedAction.id\r\n      ]\r\n    }));\r\n    let tempElems = Object.assign([], elements);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === selectedNode);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        actions: [\r\n          ...(tempElems[tempElemIndex].data?.actions || []),\r\n          clickedAction\r\n        ]\r\n      }\r\n    };\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleDeleteCondition = (nodeId, itemId) => {\r\n    let tempElems = Object.assign([], elementsStateRef.current);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === nodeId);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        conditions: (tempElems[tempElemIndex].data?.conditions || []).filter(\r\n          t => t.id !== itemId\r\n        )\r\n      }\r\n    };\r\n    setSelectedCondition({\r\n      ...selConditionStateRef.current,\r\n      [selectedNodeStateRef.current]: (\r\n        selConditionStateRef.current[selectedNodeStateRef.current] || []\r\n      ).filter(c => c !== itemId)\r\n    });\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleDeleteAction = (nodeId, itemId) => {\r\n    let tempElems = Object.assign([], elementsStateRef.current);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === nodeId);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        actions: (tempElems[tempElemIndex].data?.actions || []).filter(\r\n          t => t.id !== itemId\r\n        )\r\n      }\r\n    };\r\n    setSelectedAction({\r\n      ...selActionStateRef.current,\r\n      [selectedNodeStateRef.current]: (\r\n        selActionStateRef.current[selectedNodeStateRef.current] || []\r\n      ).filter(a => a !== itemId)\r\n    });\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const nodes = elements.filter(el => el.type === \"btnSelectorNode\");\r\n    const outputArr = [];\r\n    nodes.forEach(node => {\r\n      switch (node.data.type) {\r\n        case \"event\":\r\n          outputArr.push({ event: node.data.event });\r\n          break;\r\n        case \"condition\":\r\n          outputArr.push({ condition: node.data.conditions });\r\n          break;\r\n        case \"action-yes\":\r\n        case \"action\":\r\n          outputArr.push({ [node.data.type]: [...(node.data.actions || [])] });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    console.log(\"output\", outputArr);\r\n  };\r\n\r\n  // Handle lose focus on node to hide drawer\r\n  const handleOnSelectionChange = e => {\r\n    if (!e) {\r\n      setShowDrawer(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Background fullHeight color=\"PreviewPage grey100\">\r\n      {showDrawer && (\r\n        <div className=\"drawer\">\r\n          {showDrawer === \"events\" && (\r\n            <>\r\n              <CardHeader>\r\n                <Typography variant=\"h3\">Events</Typography>\r\n              </CardHeader>\r\n              <CardBody\r\n                type=\"events\"\r\n                nodeId={selectedNode}\r\n                listItems={EVENTS}\r\n                selectedId={selectedEvent}\r\n                handleSelect={handleEventChange}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {showDrawer === \"conditions\" && (\r\n            <>\r\n              <CardHeader>\r\n                <Typography variant=\"h3\">Conditions</Typography>\r\n              </CardHeader>\r\n              <CardBody\r\n                type=\"conditions\"\r\n                nodeId={selectedNode}\r\n                listItems={CONDITIONS}\r\n                selectedId={selectedCondition}\r\n                handleSelect={handleConditionChange}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {showDrawer === \"actions\" && (\r\n            <>\r\n              <CardHeader>\r\n                <Typography variant=\"h3\">Actions</Typography>\r\n              </CardHeader>\r\n              <CardBody\r\n                type=\"actions\"\r\n                nodeId={selectedNode}\r\n                listItems={ACTIONS}\r\n                selectedId={selectedAction}\r\n                onFocusId={clickedAction?.id}\r\n                handleSelect={handleActionChange}\r\n              />\r\n              {clickedAction && (\r\n                <>\r\n                  <CardHeader>\r\n                    <Typography variant=\"h3\">Action Details</Typography>\r\n                  </CardHeader>\r\n                  <div className=\"card-body\">\r\n                    <TextField\r\n                      fullWidth\r\n                      margin=\"dense\"\r\n                      onChange={e =>\r\n                        setClickedAction(prev => ({\r\n                          ...prev,\r\n                          value: e.target.value\r\n                        }))\r\n                      }\r\n                      type={clickedAction.type}\r\n                      value={clickedAction.value || \"\"}\r\n                      label={clickedAction.label}\r\n                    />\r\n                    <Button\r\n                      variant=\"text\"\r\n                      disableRipple\r\n                      onClick={handleAddAction}\r\n                    >\r\n                      Add\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"home-section\">\r\n        <CardHeader handleSave={handleSave}>\r\n          <Typography variant=\"h3\">Map your automation</Typography>\r\n        </CardHeader>\r\n        <div className=\"flow-body\">\r\n          <ReactFlow\r\n            elementsSelectable={true}\r\n            elements={elements}\r\n            onElementsRemove={onElementsRemove}\r\n            onConnect={onConnect}\r\n            nodeTypes={nodeTypes}\r\n            deleteKeyCode={46} /* 'delete'-key */\r\n            onSelectionChange={handleOnSelectionChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </Background>\r\n  );\r\n}\r\n\r\nexport default PreviewPage;\r\n"],"sourceRoot":""}