{"version":3,"sources":["components/common/CardHeader/CardHeader.js","components/common/CardBody/CardBody.js","components/ButtonSelectorNode/ButtonSelectorNode.js","constants/constants.js","views/home/HomePage.js"],"names":["CardHeader","props","handleSave","children","rest","className","IconButton","disableRipple","Button","variant","onClick","CardBody","useState","showMore","setShowMore","type","listItems","nodeId","selectedId","onFocusId","handleSelect","length","filter","x","includes","id","map","item","startIcon","name","endIcon","memo","data","isConnectable","selectedElements","useStoreState","store","focusNodeAction","Typography","label","event","disabled","btnLabel","e","btnAction","stopPropagation","conditions","c","i","Fragment","handleDeleteCondition","actions","a","value","handleDeleteAction","btnLabel2","btnAction2","position","style","bottom","top","background","EVENTS","CONDITIONS","ACTIONS","nodeTypes","btnSelectorNode","ButtonSelectorNode","HomePage","showDrawer","setShowDrawer","selectedNode","setSelectedNode","selectedEvent","setSelectedEvent","selectedCondition","setSelectedCondition","selectedAction","setSelectedAction","clickedAction","setClickedAction","initialElements","y","elements","setElements","elementsStateRef","useRef","current","selectedNodeStateRef","selConditionStateRef","selActionStateRef","generateNextStepNodeObj","tempElems","Object","assign","t","Number","toString","push","itemId","source","target","tempElemIndex","findIndex","Background","fullHeight","color","find","prev","TextField","fullWidth","margin","onChange","variatn","nodes","el","outputArr","forEach","node","condition","console","log","elementsSelectable","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","deleteKeyCode"],"mappings":"0WAMMA,EAAa,SAAAC,GAAU,IACnBC,EAAkCD,EAAlCC,WAAYC,EAAsBF,EAAtBE,SAAaC,EADP,YACgBH,EADhB,2BAE1B,OACE,8CAAKI,UAAS,cAAoBD,GAAlC,cACE,sBAAKC,UAAU,eAAf,UACGF,EACD,cAACG,EAAA,EAAD,CAAYC,eAAa,EAAzB,SACE,cAAC,IAAD,SAGHL,GACC,cAACM,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAASR,EAArC,uB,sDCVFS,G,OAAW,SAAAV,GAAU,IAAD,EACQW,oBAAS,GADjB,mBACjBC,EADiB,KACPC,EADO,KAGtBC,EAOEd,EAPFc,KACAC,EAMEf,EANFe,UACAC,EAKEhB,EALFgB,OACAC,EAIEjB,EAJFiB,WACAC,EAGElB,EAHFkB,UACAC,EAEEnB,EAFFmB,aACGhB,EATmB,YAUpBH,EAVoB,uEAWxB,OACE,qCACE,6CACEI,UAAS,mBAAcW,EAAUK,OAAS,EAAI,gBAAkB,GAAvD,YACPR,EAAW,WAAa,KAEtBT,GAJN,cAMa,YAATW,GAA+B,eAATA,EACpBC,EAAUM,QAAO,SAAAC,GAAC,cAAI,UAACL,EAAWD,UAAZ,aAAC,EAAoBO,SAASD,EAAEE,QACtDT,EAAUM,QAAO,SAAAC,GAAC,OAAKL,EAAWM,SAASD,EAAEE,QAC/CC,KAAI,SAAAC,GAAI,OACR,cAACnB,EAAA,EAAD,CAEEE,QAAS,kBAAMU,EAAaO,EAAKF,KACjClB,eAAa,EACbE,QAAQ,OACRJ,UAAS,wBACPc,IAAcQ,EAAKF,GAAK,WAAa,IAEvCG,UAAW,cAAC,IAAD,IARb,SAUGD,EAAKE,MATDF,EAAKF,UAafT,EAAUK,OAAS,GAClB,qBAAKhB,UAAU,gBAAf,SACE,eAACG,EAAA,EAAD,CACEE,QAAS,kBAAMI,GAAaD,IAC5BJ,QAAQ,OACRF,eAAa,EACbuB,QACEjB,EACE,cAAC,IAAD,IAEA,cAAC,IAAD,IARN,kBAYQA,EAAW,OAAS,iB,kBChDvBkB,G,OAAAA,gBAAK,YAAkC,IAAD,IAA9BN,EAA8B,EAA9BA,GAAIO,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cACzBC,EAAmBC,aAAc,SAAAC,GAAK,OAAIA,EAAMF,oBAEtD,OACE,sBACE7B,UAAS,6BACP6B,GAAoBA,EAAiB,GAAGT,KAAOA,EAAK,cAAgB,IAEtEf,QAAS,kBAAMsB,EAAKK,mBAJtB,UAME,8BACE,cAACC,EAAA,EAAD,CAAY7B,QAAQ,QAApB,SAA6BuB,EAAKO,UAErB,UAAdP,EAAKjB,OACHiB,EAAKQ,MACJ,cAAChC,EAAA,EAAD,CAAQC,QAAQ,YAAYgC,UAAQ,EAACpC,UAAU,YAA/C,SACG2B,EAAKQ,MAAMX,OAGdG,EAAKU,UACH,cAAClC,EAAA,EAAD,CACEE,QAAS,SAAAiC,GACPX,EAAKY,YACLD,EAAEE,mBAEJpC,QAAQ,YALV,SAOGuB,EAAKU,aAKE,cAAdV,EAAKjB,MAAsC,WAAdiB,EAAKjB,SACjC,UAAAiB,EAAKc,kBAAL,eAAiBzB,QAAS,EACvBW,EAAKc,WAAWpB,KAAI,SAACqB,EAAGC,GAAJ,OAClB,cAAC,IAAMC,SAAP,UACE,sBAAK5C,UAAU,YAAf,UACE,cAACG,EAAA,EAAD,CACEC,QAAQ,YACRgC,UAAQ,EACRpC,UAAU,gBAHZ,SAKG0C,EAAElB,OAEL,cAACvB,EAAA,EAAD,CACEC,eAAa,EACbG,QAAS,kBAAMsB,EAAKkB,sBAAsBH,EAAEtB,KAF9C,SAIE,cAAC,IAAD,MAEDuB,IAAMhB,EAAKc,WAAWzB,OAAS,GAC9B,cAACiB,EAAA,EAAD,CAAY7B,QAAQ,KAApB,qBAhBesC,EAAEtB,OAqBzBO,EAAKU,UACH,cAAClC,EAAA,EAAD,CACEE,QAAS,SAAAiC,GACPX,EAAKY,YACLD,EAAEE,mBAEJpC,QAAQ,YALV,SAOGuB,EAAKU,YAKfV,EAAKjB,KAAKS,SAAS,aACjB,UAAAQ,EAAKmB,eAAL,eAAc9B,QAAS,EACpBW,EAAKmB,QAAQzB,KAAI,SAAC0B,EAAGJ,GAAJ,OACf,cAAC,IAAMC,SAAP,UACE,sBAAK5C,UAAU,YAAf,UACE,eAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYgC,UAAQ,EAACpC,UAAU,aAA/C,UACG+C,EAAEvB,KADL,MACcuB,EAAEC,SAEhB,cAAC/C,EAAA,EAAD,CACEC,eAAa,EACbG,QAAS,kBAAMsB,EAAKsB,mBAAmBF,EAAE3B,KAF3C,SAIE,cAAC,IAAD,MAEDuB,IAAMhB,EAAKmB,QAAQ9B,OAAS,GAC3B,cAACiB,EAAA,EAAD,CAAY7B,QAAQ,KAApB,qBAZe2C,EAAE3B,OAiBzBO,EAAKU,UACH,cAAClC,EAAA,EAAD,CACEE,QAAS,SAAAiC,GACPX,EAAKY,YACLD,EAAEE,mBAEJpC,QAAQ,YALV,SAOGuB,EAAKU,YAID,WAAdV,EAAKjB,MACJ,cAACuB,EAAA,EAAD,CAAY7B,QAAQ,KAAKJ,UAAU,UAAnC,gBAKD2B,EAAKuB,WACJ,cAAC/C,EAAA,EAAD,CACEE,QAAS,SAAAiC,GACPX,EAAKwB,aACLb,EAAEE,mBAEJpC,QAAQ,YALV,SAOGuB,EAAKuB,YAIV,cAAC,IAAD,CACExC,KAAK,SACL0C,SAAS,SACTC,MAAO,CAAEC,OAAQ,GAAIC,IAAK,OAAQC,WAAY,QAC9C5B,cAAeA,WCrIV6B,EAAS,CACpB,CAAErC,GAAI,EAAGI,KAAM,oBACf,CAAEJ,GAAI,EAAGI,KAAM,cACf,CAAEJ,GAAI,EAAGI,KAAM,kBACf,CAAEJ,GAAI,EAAGI,KAAM,qBAGJkC,EAAa,CACxB,CAAEtC,GAAI,EAAGI,KAAM,gBACf,CAAEJ,GAAI,EAAGI,KAAM,gBACf,CAAEJ,GAAI,EAAGI,KAAM,qBACf,CAAEJ,GAAI,EAAGI,KAAM,kBACf,CAAEJ,GAAI,EAAGI,KAAM,gBACf,CAAEJ,GAAI,EAAGI,KAAM,iBAEJmC,EAAU,CACrB,CACEvC,GAAI,EACJI,KAAM,wBACNd,KAAM,QACNwB,MAAO,iBAET,CAAEd,GAAI,EAAGI,KAAM,eAAgBd,KAAM,MAAOwB,MAAO,kBACnD,CAAEd,GAAI,EAAGI,KAAM,qBAAsBd,KAAM,MAAOwB,MAAO,kBACzD,CAAEd,GAAI,EAAGI,KAAM,iBAAkBd,KAAM,MAAOwB,MAAO,mBCVjD0B,G,OAAY,CAChBC,gBAAiBC,IA0bJC,UAvbf,WAAqB,IAAD,EACkBxD,mBAAS,UAD3B,mBACXyD,EADW,KACCC,EADD,OAEsB1D,mBAAS,KAF/B,mBAEX2D,EAFW,KAEGC,EAFH,OAGwB5D,mBAAS,IAHjC,mBAGX6D,EAHW,KAGIC,EAHJ,OAIgC9D,mBAAS,IAJzC,mBAIX+D,EAJW,KAIQC,EAJR,OAK0BhE,mBAAS,IALnC,mBAKXiE,EALW,KAKKC,EALL,OAMwBlE,mBAAS,MANjC,mBAMXmE,EANW,KAMIC,EANJ,KAQZC,EAAkB,CACtB,CACExD,GAAI,IACJV,KAAM,kBACNiB,KAAM,CACJO,MAAO,OACPxB,KAAM,QACN2B,SAAU,uBACVL,gBAAiB,WACfiC,EAAc,UACdE,EAAgB,MAElB5B,UAAW,WACT0B,EAAc,UACdE,EAAgB,OAGpBf,SAAU,CAAElC,EAAG,IAAK2D,EAAG,MAzBT,EA4BctE,mBAASqE,GA5BvB,mBA4BXE,EA5BW,KA4BDC,EA5BC,KAgCZC,EAAmBC,mBACzBD,EAAiBE,QAAUJ,EAC3B,IAAMK,EAAuBF,mBAC7BE,EAAqBD,QAAUhB,EAC/B,IAAMkB,EAAuBH,mBAC7BG,EAAqBF,QAAUZ,EAC/B,IAAMe,EAAoBJ,mBAC1BI,EAAkBH,QAAUV,EAE5B,IAAMc,EAA0B,SAA1BA,EAA2B1E,EAAQwC,GACvC,MAAO,CACLlB,MAAM,YACNxB,KAAM,SACN2B,SAAU,gBACVL,gBAAiB,WACfiC,EAAc,MACdE,EAAgBvD,IAElB2B,UAAW,WAAO,IAAD,EACf0B,EAAc,cACdE,EAAgBvD,GAEhB,IAAI2E,EAAYC,OAAOC,OAAO,GAAIT,EAAiBE,UAMnD,EALAK,EAAYA,EAAUtE,QACpB,SAAAyE,GAAC,OACCA,EAAEtE,KAAOR,GACT8E,EAAEtE,KAAF,iBAAmBuE,OAAO/E,GAAU,GAAGgF,WAAvC,YAAqDhF,OAE/CiF,KAAV,SACE,CACEzE,GAAIR,EACJF,KAAM,kBACNiB,KAAM,CACJO,MAAM,QACNxB,KAAM,YACN2B,SAAU,gBACVL,gBAAiB,WACfiC,EAAc,cACdE,EAAgBvD,IAElB2B,UAAW,WACT0B,EAAc,cACdE,EAAgBvD,IAElBiC,sBAAuB,SAAAiD,GAAM,OAC3BjD,EAAsBjC,EAAQkF,KAElC1C,SAAUA,GAEZ,CACEhC,IAAKuE,OAAO/E,GAAU,GAAGgF,WACzBlF,KAAM,kBACNiB,KAAM,CACJO,MAAM,UACNxB,KAAM,aACN2B,SAAU,aACVL,gBAAiB,WACfiC,EAAc,WACdE,GAAiBwB,OAAO/E,GAAU,GAAGgF,aAEvCrD,UAAW,WACT0B,EAAc,WACdE,GAAiBwB,OAAO/E,GAAU,GAAGgF,aAEvC3C,mBAAoB,SAAA6C,GAAM,OACxB7C,GAAoB0C,OAAO/E,GAAU,GAAGgF,WAAYE,KAExD1C,SAAU,CAAElC,EAAGkC,EAASlC,EAAG2D,EAAGzB,EAASyB,EAAI,MAE7C,CACEzD,IAAKuE,OAAO/E,GAAU,GAAGgF,WACzBlF,KAAM,kBACNiB,KAAM2D,GAAyBK,OAAO/E,GAAU,GAAGgF,WAAY,CAC7D1E,EAAGkC,EAASlC,EAAI,IAChB2D,EAAGzB,EAASyB,EAAI,MAElBzB,SAAU,CAAElC,EAAGkC,EAASlC,EAAI,IAAK2D,EAAGzB,EAASyB,EAAI,OAhDrD,mBAkDiB,MAAXjE,EACA,CACE,CACEQ,GAAG,SAAD,QAAYuE,OAAO/E,GAAU,GAAGgF,WAAhC,YAA8ChF,GAChDmF,QAASJ,OAAO/E,GAAU,GAAGgF,WAC7BI,OAAQpF,EACRF,KAAM,eAGV,IA3DN,CA4DE,CACEU,GAAG,SAAD,OAAWR,EAAX,aAAsB+E,OAAO/E,GAAU,GAAGgF,YAC5CG,OAAQnF,EACRoF,QAASL,OAAO/E,GAAU,GAAGgF,WAC7BlF,KAAM,aACNwB,MAAO,OAET,CACEd,GAAG,SAAD,OAAWR,EAAX,aAAsB+E,OAAO/E,GAAU,GAAGgF,YAC5CG,OAAQnF,EACRoF,QAASL,OAAO/E,GAAU,GAAGgF,WAC7BlF,KAAM,aACNwB,MAAO,SAGX6C,EAAYQ,IAEdrC,UAAW,aACXC,WAAY,WAAO,IAAD,EAChBc,EAAc,WACdE,EAAgBvD,GAEhB,IAAI2E,EAAYC,OAAOC,OAAO,GAAIT,EAAiBE,UAMnD,EALAK,EAAYA,EAAUtE,QACpB,SAAAyE,GAAC,OACCA,EAAEtE,KAAOR,GACT8E,EAAEtE,KAAF,iBAAmBuE,OAAO/E,GAAU,GAAGgF,WAAvC,YAAqDhF,OAE/CiF,KAAV,SACE,CACEzE,GAAIR,EACJF,KAAM,kBACNiB,KAAM,CACJO,MAAM,UACNxB,KAAM,SACN2B,SAAU,aACVL,gBAAiB,WACfiC,EAAc,WACdE,EAAgBvD,IAElB2B,UAAW,WACT0B,EAAc,WACdE,EAAgBvD,IAElBqC,mBAAoB,SAAA6C,GAAM,OAAI7C,EAAmBrC,EAAQkF,KAE3D1C,SAAUA,IAlBd,mBAoBiB,MAAXxC,EACA,CACE,CACEQ,GAAG,SAAD,QAAYuE,OAAO/E,GAAU,GAAGgF,WAAhC,YAA8ChF,GAChDmF,QAASJ,OAAO/E,GAAU,GAAGgF,WAC7BI,OAAQpF,EACRF,KAAM,eAGV,MAGNqE,EAAYQ,IAEd1C,sBAAuB,SAAAiD,GAAM,OAAIjD,EAAsBjC,EAAQkF,MA6F7DjD,EAAwB,SAACjC,EAAQkF,GAAY,IAAD,EAC5CP,EAAYC,OAAOC,OAAO,GAAIT,EAAiBE,SAC/Ce,EAAgBV,EAAUW,WAAU,SAAAR,GAAC,OAAIA,EAAEtE,KAAOR,KACtD2E,EAAUU,GAAV,2BACKV,EAAUU,IADf,IAEEtE,KAAK,2BACA4D,EAAUU,GAAetE,MAD1B,IAEFc,aAAa,UAAA8C,EAAUU,GAAetE,YAAzB,eAA+Bc,aAAc,IAAIxB,QAC5D,SAAAyE,GAAC,OAAIA,EAAEtE,KAAO0E,SAIpBvB,EAAqB,2BAChBa,EAAqBF,SADN,kBAEjBC,EAAqBD,SACpBE,EAAqBF,QAAQC,EAAqBD,UAAY,IAC9DjE,QAAO,SAAAyB,GAAC,OAAIA,IAAMoD,QAEtBf,EAAYQ,IAGRtC,EAAqB,SAACrC,EAAQkF,GAAY,IAAD,EACzCP,EAAYC,OAAOC,OAAO,GAAIT,EAAiBE,SAC/Ce,EAAgBV,EAAUW,WAAU,SAAAR,GAAC,OAAIA,EAAEtE,KAAOR,KACtD2E,EAAUU,GAAV,2BACKV,EAAUU,IADf,IAEEtE,KAAK,2BACA4D,EAAUU,GAAetE,MAD1B,IAEFmB,UAAU,UAAAyC,EAAUU,GAAetE,YAAzB,eAA+BmB,UAAW,IAAI7B,QACtD,SAAAyE,GAAC,OAAIA,EAAEtE,KAAO0E,SAIpBrB,EAAkB,2BACbY,EAAkBH,SADN,kBAEdC,EAAqBD,SACpBG,EAAkBH,QAAQC,EAAqBD,UAAY,IAC3DjE,QAAO,SAAA8B,GAAC,OAAIA,IAAM+C,QAEtBf,EAAYQ,IAyBd,OACE,eAACY,EAAA,EAAD,CAAYC,YAAU,EAACC,MAAM,mBAA7B,UACGrC,GACC,sBAAKhE,UAAU,SAAf,UACkB,WAAfgE,GACC,qCACE,cAAC,EAAD,UACE,cAAC/B,EAAA,EAAD,CAAY7B,QAAQ,KAApB,sBAEF,cAAC,EAAD,CACEM,KAAK,SACLE,OAAQsD,EACRvD,UAAW8C,EACX5C,WAAYuD,EACZrD,aAvKY,SAAAK,GACxBiD,EAAiB,CAACjD,IAClB,IAAImE,EAAYC,OAAOC,OAAO,GAAIX,GAClCS,EAAU,GAAK,CACbnE,GAAI,IACJV,KAAM,kBACNiB,KAAM,CACJO,MAAO,OACPxB,KAAM,QACNyB,MAAOsB,EAAO6C,MAAK,SAAAhE,GAAC,OAAIA,EAAElB,KAAOA,KACjCY,gBAAiB,WACfiC,EAAc,UACdE,EAAgB,MAElB5B,UAAW,WACT0B,EAAc,UACdE,EAAgB,OAGpBf,SAAU,CAAElC,EAAG,IAAK2D,EAAG,KAGA,IAArBU,EAAUvE,QACZuE,EAAUM,KACR,CACEzE,GAAI,IACJV,KAAM,kBACNiB,KAAM2D,EAAwB,IAAK,CAAEpE,EAAG,IAAK2D,EAAG,MAChDzB,SAAU,CAAElC,EAAG,IAAK2D,EAAG,MAEzB,CACEzD,GAAI,YACJ2E,OAAQ,IACRC,OAAQ,IACRtF,KAAM,eAIZuD,EAAc,MACdc,EAAYQ,SAqIU,eAAfvB,GACC,qCACE,cAAC,EAAD,UACE,cAAC/B,EAAA,EAAD,CAAY7B,QAAQ,KAApB,0BAEF,cAAC,EAAD,CACEM,KAAK,aACLE,OAAQsD,EACRvD,UAAW+C,EACX7C,WAAYyD,EACZvD,aA5IgB,SAAAK,GAAO,IAAD,EAClCmD,GAAqB,SAAAgC,GAAI,kCACpBA,GADoB,kBAEtBrC,EAFsB,sBAEFI,EAAkBJ,IAAiB,IAFjC,CAEsC9C,SAE/D,IAAImE,EAAYC,OAAOC,OAAO,GAAIX,GAC9BmB,EAAgBV,EAAUW,WAAU,SAAAR,GAAC,OAAIA,EAAEtE,KAAO8C,KACtDqB,EAAUU,GAAV,2BACKV,EAAUU,IADf,IAEEtE,KAAK,2BACA4D,EAAUU,GAAetE,MAD1B,IAEFc,WAAW,GAAD,oBACJ,UAAA8C,EAAUU,GAAetE,YAAzB,eAA+Bc,aAAc,IADzC,CAERiB,EAAW4C,MAAK,SAAAhE,GAAC,OAAIA,EAAElB,KAAOA,WAIpC2D,EAAYQ,SAgIU,YAAfvB,GACC,qCACE,cAAC,EAAD,UACE,cAAC/B,EAAA,EAAD,CAAY7B,QAAQ,KAApB,uBAEF,cAAC,EAAD,CACEM,KAAK,UACLE,OAAQsD,EACRvD,UAAWgD,EACX9C,WAAY2D,EACZ1D,UAAS,OAAE4D,QAAF,IAAEA,OAAF,EAAEA,EAAetD,GAC1BL,aAxIa,SAAAK,GACzBuD,EAAiBhB,EAAQ2C,MAAK,SAAAvD,GAAC,OAAIA,EAAE3B,KAAOA,SAyIjCsD,GACC,qCACE,cAAC,EAAD,UACE,cAACzC,EAAA,EAAD,CAAY7B,QAAQ,KAApB,8BAEF,sBAAKJ,UAAU,YAAf,UACE,cAACwG,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACPC,SAAU,SAAArE,GAAC,OACTqC,GAAiB,SAAA4B,GAAI,kCAChBA,GADgB,IAEnBvD,MAAOV,EAAE0D,OAAOhD,YAGpBtC,KAAMgE,EAAchE,KACpBsC,MAAO0B,EAAc1B,OAAS,GAC9Bd,MAAOwC,EAAcxC,QAEvB,cAAC/B,EAAA,EAAD,CACEyG,QAAQ,OACR1G,eAAa,EACbG,QA5JI,WAAO,IAAD,EAC5BoE,GAAkB,SAAA8B,GAAI,kCACjBA,GADiB,kBAEnBrC,EAFmB,sBAGdM,EAAeN,IAAiB,IAHlB,CAIlBQ,EAActD,UAGlB,IAAImE,EAAYC,OAAOC,OAAO,GAAIX,GAC9BmB,EAAgBV,EAAUW,WAAU,SAAAR,GAAC,OAAIA,EAAEtE,KAAO8C,KACtDqB,EAAUU,GAAV,2BACKV,EAAUU,IADf,IAEEtE,KAAK,2BACA4D,EAAUU,GAAetE,MAD1B,IAEFmB,QAAQ,GAAD,oBACD,UAAAyC,EAAUU,GAAetE,YAAzB,eAA+BmB,UAAW,IADzC,CAEL4B,QAINK,EAAYQ,IAqII,6BAed,sBAAKvF,UAAU,eAAf,UACE,cAAC,EAAD,CAAYH,WAxGC,WACjB,IAAMgH,EAAQ/B,EAAS7D,QAAO,SAAA6F,GAAE,MAAgB,oBAAZA,EAAGpG,QACjCqG,EAAY,GAClBF,EAAMG,SAAQ,SAAAC,GACZ,OAAQA,EAAKtF,KAAKjB,MAChB,IAAK,QACHqG,EAAUlB,KAAK,CAAE1D,MAAO8E,EAAKtF,KAAKQ,QAClC,MACF,IAAK,YACH4E,EAAUlB,KAAK,CAAEqB,UAAWD,EAAKtF,KAAKc,aACtC,MACF,IAAK,aACL,IAAK,SACHsE,EAAUlB,KAAV,eAAkBoB,EAAKtF,KAAKjB,KAA5B,YAAuCuG,EAAKtF,KAAKmB,eAMvDqE,QAAQC,IAAI,SAAUL,IAqFlB,SACE,cAAC9E,EAAA,EAAD,CAAY7B,QAAQ,KAApB,mCAEF,qBAAKJ,UAAU,YAAf,SACE,cAAC,IAAD,CACEqH,oBAAoB,EACpBvC,SAAUA,EACVwC,iBA/Ye,SAAAC,GAAgB,OACvCxC,GAAY,SAAAyC,GAAG,OAAIC,YAAeF,EAAkBC,OA+Y5CE,UA9YQ,SAAAC,GAAM,OAAI5C,GAAY,SAAAyC,GAAG,OAAII,YAAQD,EAAQH,OA+YrD5D,UAAWA,EACXiE,cAAe","file":"static/js/4.15f82dbb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport \"./CardHeader.scss\";\r\n\r\nconst CardHeader = props => {\r\n  const { handleSave, children, ...rest } = props;\r\n  return (\r\n    <div className={`CardHeader`} {...rest}>\r\n      <div className=\"left-section\">\r\n        {children}\r\n        <IconButton disableRipple>\r\n          <InfoOutlinedIcon />\r\n        </IconButton>\r\n      </div>\r\n      {handleSave && (\r\n        <Button variant=\"contained\" onClick={handleSave}>\r\n          Save\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CardHeader };\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddBoxOutlinedIcon from \"@material-ui/icons/AddBoxOutlined\";\r\nimport KeyboardArrowUpOutlinedIcon from \"@material-ui/icons/KeyboardArrowUpOutlined\";\r\nimport KeyboardArrowDownOutlinedIcon from \"@material-ui/icons/KeyboardArrowDownOutlined\";\r\nimport \"./CardBody.scss\";\r\n\r\nconst CardBody = props => {\r\n  const [showMore, setShowMore] = useState(false);\r\n  const {\r\n    type,\r\n    listItems,\r\n    nodeId,\r\n    selectedId,\r\n    onFocusId,\r\n    handleSelect,\r\n    ...rest\r\n  } = props;\r\n  return (\r\n    <>\r\n      <div\r\n        className={`CardBody ${listItems.length > 3 ? \"has-show-more\" : \"\"} ${\r\n          showMore ? \"show-all\" : \"\"\r\n        }`}\r\n        {...rest}\r\n      >\r\n        {(type === \"actions\" || type === \"conditions\"\r\n          ? listItems.filter(x => !selectedId[nodeId]?.includes(x.id))\r\n          : listItems.filter(x => !selectedId.includes(x.id))\r\n        ).map(item => (\r\n          <Button\r\n            key={item.id}\r\n            onClick={() => handleSelect(item.id)}\r\n            disableRipple\r\n            variant=\"text\"\r\n            className={`btn-card-item ${\r\n              onFocusId === item.id ? \"on-focus\" : \"\"\r\n            }`}\r\n            startIcon={<AddBoxOutlinedIcon />}\r\n          >\r\n            {item.name}\r\n          </Button>\r\n        ))}\r\n      </div>\r\n      {listItems.length > 3 && (\r\n        <div className=\"btn-show-more\">\r\n          <Button\r\n            onClick={() => setShowMore(!showMore)}\r\n            variant=\"text\"\r\n            disableRipple\r\n            endIcon={\r\n              showMore ? (\r\n                <KeyboardArrowUpOutlinedIcon />\r\n              ) : (\r\n                <KeyboardArrowDownOutlinedIcon />\r\n              )\r\n            }\r\n          >\r\n            Show {showMore ? \"less\" : \"more\"}\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport { CardBody };\r\n","import React, { memo } from \"react\";\r\n\r\nimport { Handle, useStoreState } from \"react-flow-renderer\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport \"./ButtonSelectorNode.scss\";\r\n\r\nexport default memo(({ id, data, isConnectable }) => {\r\n  const selectedElements = useStoreState(store => store.selectedElements);\r\n\r\n  return (\r\n    <div\r\n      className={`ButtonSelectorNode ${\r\n        selectedElements && selectedElements[0].id === id ? \"is-selected\" : \"\"\r\n      }`}\r\n      onClick={() => data.focusNodeAction()}\r\n    >\r\n      <div>\r\n        <Typography variant=\"body1\">{data.label}</Typography>\r\n      </div>\r\n      {data.type === \"event\" &&\r\n        (data.event ? (\r\n          <Button variant=\"contained\" disabled className=\"lbl-event\">\r\n            {data.event.name}\r\n          </Button>\r\n        ) : (\r\n          data.btnLabel && (\r\n            <Button\r\n              onClick={e => {\r\n                data.btnAction();\r\n                e.stopPropagation();\r\n              }}\r\n              variant=\"contained\"\r\n            >\r\n              {data.btnLabel}\r\n            </Button>\r\n          )\r\n        ))}\r\n\r\n      {(data.type === \"condition\" || data.type === \"choice\") &&\r\n        (data.conditions?.length > 0\r\n          ? data.conditions.map((c, i) => (\r\n              <React.Fragment key={c.id}>\r\n                <div className=\"label-div\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    disabled\r\n                    className=\"lbl-condition\"\r\n                  >\r\n                    {c.name}\r\n                  </Button>\r\n                  <IconButton\r\n                    disableRipple\r\n                    onClick={() => data.handleDeleteCondition(c.id)}\r\n                  >\r\n                    <HighlightOffIcon />\r\n                  </IconButton>\r\n                  {i !== data.conditions.length - 1 && (\r\n                    <Typography variant=\"h6\">AND</Typography>\r\n                  )}\r\n                </div>\r\n              </React.Fragment>\r\n            ))\r\n          : data.btnLabel && (\r\n              <Button\r\n                onClick={e => {\r\n                  data.btnAction();\r\n                  e.stopPropagation();\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                {data.btnLabel}\r\n              </Button>\r\n            ))}\r\n\r\n      {/* type === 'action' || type === 'action-yes' */}\r\n      {data.type.includes(\"action\") &&\r\n        (data.actions?.length > 0\r\n          ? data.actions.map((a, i) => (\r\n              <React.Fragment key={a.id}>\r\n                <div className=\"label-div\">\r\n                  <Button variant=\"contained\" disabled className=\"lbl-action\">\r\n                    {a.name} - {a.value}\r\n                  </Button>\r\n                  <IconButton\r\n                    disableRipple\r\n                    onClick={() => data.handleDeleteAction(a.id)}\r\n                  >\r\n                    <HighlightOffIcon />\r\n                  </IconButton>\r\n                  {i !== data.actions.length - 1 && (\r\n                    <Typography variant=\"h6\">AND</Typography>\r\n                  )}\r\n                </div>\r\n              </React.Fragment>\r\n            ))\r\n          : data.btnLabel && (\r\n              <Button\r\n                onClick={e => {\r\n                  data.btnAction();\r\n                  e.stopPropagation();\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                {data.btnLabel}\r\n              </Button>\r\n            ))}\r\n\r\n      {data.type === \"choice\" && (\r\n        <Typography variant=\"h6\" className=\"text-or\">\r\n          OR\r\n        </Typography>\r\n      )}\r\n\r\n      {data.btnLabel2 && (\r\n        <Button\r\n          onClick={e => {\r\n            data.btnAction2();\r\n            e.stopPropagation();\r\n          }}\r\n          variant=\"contained\"\r\n        >\r\n          {data.btnLabel2}\r\n        </Button>\r\n      )}\r\n\r\n      <Handle\r\n        type=\"source\"\r\n        position=\"bottom\"\r\n        style={{ bottom: 10, top: \"auto\", background: \"#555\" }}\r\n        isConnectable={isConnectable}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n","export const EVENTS = [\r\n  { id: 1, name: \"New order placed\" },\r\n  { id: 2, name: \"New signup\" },\r\n  { id: 3, name: \"New subscriber\" },\r\n  { id: 4, name: \"New cancellation\" }\r\n];\r\n\r\nexport const CONDITIONS = [\r\n  { id: 1, name: \"Amount > 100\" },\r\n  { id: 2, name: \"Amount < 100\" },\r\n  { id: 3, name: \"Product is Coffee\" },\r\n  { id: 4, name: \"Product is Tea\" },\r\n  { id: 5, name: \"Date > Today\" },\r\n  { id: 6, name: \"Date < Today\" }\r\n];\r\nexport const ACTIONS = [\r\n  {\r\n    id: 1,\r\n    name: \"Send email to Contact\",\r\n    type: \"email\",\r\n    label: \"Email address\"\r\n  },\r\n  { id: 2, name: \"Call Contact\", type: \"tel\", label: \"Contact Number\" },\r\n  { id: 3, name: \"Add Tag to Contact\", type: \"tel\", label: \"Contact Number\" },\r\n  { id: 4, name: \"Remove Contact\", type: \"tel\", label: \"Contact Number\" }\r\n];\r\n","import React, { useState, useRef } from \"react\";\r\nimport ReactFlow, { removeElements, addEdge } from \"react-flow-renderer\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Background } from \"components/common/Background/Background\";\r\nimport { CardHeader } from \"components/common/CardHeader/CardHeader\";\r\nimport { CardBody } from \"components/common/CardBody/CardBody\";\r\nimport ButtonSelectorNode from \"components/ButtonSelectorNode/ButtonSelectorNode\";\r\nimport { ACTIONS, CONDITIONS, EVENTS } from \"constants/constants\";\r\n\r\nimport \"./HomePage.scss\";\r\n\r\nconst nodeTypes = {\r\n  btnSelectorNode: ButtonSelectorNode\r\n};\r\n\r\nfunction HomePage() {\r\n  const [showDrawer, setShowDrawer] = useState(\"events\");\r\n  const [selectedNode, setSelectedNode] = useState(\"1\");\r\n  const [selectedEvent, setSelectedEvent] = useState([]);\r\n  const [selectedCondition, setSelectedCondition] = useState({});\r\n  const [selectedAction, setSelectedAction] = useState({});\r\n  const [clickedAction, setClickedAction] = useState(null);\r\n\r\n  const initialElements = [\r\n    {\r\n      id: \"1\",\r\n      type: \"btnSelectorNode\",\r\n      data: {\r\n        label: \"When\",\r\n        type: \"event\",\r\n        btnLabel: \"Select event trigger\",\r\n        focusNodeAction: () => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(\"1\");\r\n        },\r\n        btnAction: () => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(\"1\");\r\n        }\r\n      },\r\n      position: { x: 250, y: 25 }\r\n    }\r\n  ];\r\n  const [elements, setElements] = useState(initialElements);\r\n  const onElementsRemove = elementsToRemove =>\r\n    setElements(els => removeElements(elementsToRemove, els));\r\n  const onConnect = params => setElements(els => addEdge(params, els));\r\n  const elementsStateRef = useRef();\r\n  elementsStateRef.current = elements;\r\n  const selectedNodeStateRef = useRef();\r\n  selectedNodeStateRef.current = selectedNode;\r\n  const selConditionStateRef = useRef();\r\n  selConditionStateRef.current = selectedCondition;\r\n  const selActionStateRef = useRef();\r\n  selActionStateRef.current = selectedAction;\r\n\r\n  const generateNextStepNodeObj = (nodeId, position) => {\r\n    return {\r\n      label: `Next Step`,\r\n      type: \"choice\",\r\n      btnLabel: \"Add condition\",\r\n      focusNodeAction: () => {\r\n        setShowDrawer(null);\r\n        setSelectedNode(nodeId);\r\n      },\r\n      btnAction: () => {\r\n        setShowDrawer(\"conditions\");\r\n        setSelectedNode(nodeId);\r\n\r\n        let tempElems = Object.assign([], elementsStateRef.current);\r\n        tempElems = tempElems.filter(\r\n          t =>\r\n            t.id !== nodeId &&\r\n            t.id !== `edges-${(Number(nodeId) - 1).toString()}-${nodeId}`\r\n        );\r\n        tempElems.push(\r\n          {\r\n            id: nodeId, // 2\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `If...`,\r\n              type: \"condition\",\r\n              btnLabel: \"Add condition\",\r\n              focusNodeAction: () => {\r\n                setShowDrawer(\"conditions\");\r\n                setSelectedNode(nodeId);\r\n              },\r\n              btnAction: () => {\r\n                setShowDrawer(\"conditions\");\r\n                setSelectedNode(nodeId);\r\n              },\r\n              handleDeleteCondition: itemId =>\r\n                handleDeleteCondition(nodeId, itemId)\r\n            },\r\n            position: position\r\n          },\r\n          {\r\n            id: (Number(nodeId) + 1).toString(), // 3\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `Then...`,\r\n              type: \"action-yes\",\r\n              btnLabel: \"Add action\",\r\n              focusNodeAction: () => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode((Number(nodeId) + 1).toString());\r\n              },\r\n              btnAction: () => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode((Number(nodeId) + 1).toString());\r\n              },\r\n              handleDeleteAction: itemId =>\r\n                handleDeleteAction((Number(nodeId) + 1).toString(), itemId)\r\n            },\r\n            position: { x: position.x, y: position.y + 400 }\r\n          },\r\n          {\r\n            id: (Number(nodeId) + 2).toString(), // 4\r\n            type: \"btnSelectorNode\",\r\n            data: generateNextStepNodeObj((Number(nodeId) + 2).toString(), {\r\n              x: position.x + 300,\r\n              y: position.y + 150\r\n            }),\r\n            position: { x: position.x + 300, y: position.y + 150 }\r\n          },\r\n          ...(nodeId === \"2\"\r\n            ? [\r\n                {\r\n                  id: `edges-${(Number(nodeId) - 1).toString()}-${nodeId}`, // edges-1-2\r\n                  source: (Number(nodeId) - 1).toString(),\r\n                  target: nodeId,\r\n                  type: \"smoothstep\"\r\n                }\r\n              ]\r\n            : []),\r\n          {\r\n            id: `edges-${nodeId}-${(Number(nodeId) + 1).toString()}`, // edges-2-3\r\n            source: nodeId,\r\n            target: (Number(nodeId) + 1).toString(),\r\n            type: \"smoothstep\",\r\n            label: \"yes\"\r\n          },\r\n          {\r\n            id: `edges-${nodeId}-${(Number(nodeId) + 2).toString()}`, // edges-2-4\r\n            source: nodeId,\r\n            target: (Number(nodeId) + 2).toString(),\r\n            type: \"smoothstep\",\r\n            label: \"no\"\r\n          }\r\n        );\r\n        setElements(tempElems);\r\n      },\r\n      btnLabel2: \"Add Action\",\r\n      btnAction2: () => {\r\n        setShowDrawer(\"actions\");\r\n        setSelectedNode(nodeId);\r\n\r\n        let tempElems = Object.assign([], elementsStateRef.current);\r\n        tempElems = tempElems.filter(\r\n          t =>\r\n            t.id !== nodeId &&\r\n            t.id !== `edges-${(Number(nodeId) - 1).toString()}-${nodeId}` // edges-1-2\r\n        );\r\n        tempElems.push(\r\n          {\r\n            id: nodeId,\r\n            type: \"btnSelectorNode\",\r\n            data: {\r\n              label: `Then...`,\r\n              type: \"action\",\r\n              btnLabel: \"Add action\",\r\n              focusNodeAction: () => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(nodeId);\r\n              },\r\n              btnAction: () => {\r\n                setShowDrawer(\"actions\");\r\n                setSelectedNode(nodeId);\r\n              },\r\n              handleDeleteAction: itemId => handleDeleteAction(nodeId, itemId)\r\n            },\r\n            position: position\r\n          },\r\n          ...(nodeId === \"2\"\r\n            ? [\r\n                {\r\n                  id: `edges-${(Number(nodeId) - 1).toString()}-${nodeId}`, // edges-1-2\r\n                  source: (Number(nodeId) - 1).toString(),\r\n                  target: nodeId,\r\n                  type: \"smoothstep\"\r\n                }\r\n              ]\r\n            : [])\r\n        );\r\n\r\n        setElements(tempElems);\r\n      },\r\n      handleDeleteCondition: itemId => handleDeleteCondition(nodeId, itemId)\r\n    };\r\n  };\r\n\r\n  const handleEventChange = id => {\r\n    setSelectedEvent([id]);\r\n    let tempElems = Object.assign([], elements);\r\n    tempElems[0] = {\r\n      id: \"1\",\r\n      type: \"btnSelectorNode\",\r\n      data: {\r\n        label: \"When\",\r\n        type: \"event\",\r\n        event: EVENTS.find(e => e.id === id),\r\n        focusNodeAction: () => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(\"1\");\r\n        },\r\n        btnAction: () => {\r\n          setShowDrawer(\"events\");\r\n          setSelectedNode(\"1\");\r\n        }\r\n      },\r\n      position: { x: 250, y: 25 }\r\n    };\r\n\r\n    if (tempElems.length === 1) {\r\n      tempElems.push(\r\n        {\r\n          id: \"2\",\r\n          type: \"btnSelectorNode\",\r\n          data: generateNextStepNodeObj(\"2\", { x: 250, y: 200 }),\r\n          position: { x: 250, y: 200 }\r\n        },\r\n        {\r\n          id: \"edges-1-2\",\r\n          source: \"1\",\r\n          target: \"2\",\r\n          type: \"smoothstep\"\r\n        }\r\n      );\r\n    }\r\n    setShowDrawer(null);\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleConditionChange = id => {\r\n    setSelectedCondition(prev => ({\r\n      ...prev,\r\n      [selectedNode]: [...(selectedCondition[selectedNode] || []), id]\r\n    }));\r\n    let tempElems = Object.assign([], elements);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === selectedNode);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        conditions: [\r\n          ...(tempElems[tempElemIndex].data?.conditions || []),\r\n          CONDITIONS.find(e => e.id === id)\r\n        ]\r\n      }\r\n    };\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleActionChange = id => {\r\n    setClickedAction(ACTIONS.find(a => a.id === id));\r\n  };\r\n\r\n  const handleAddAction = () => {\r\n    setSelectedAction(prev => ({\r\n      ...prev,\r\n      [selectedNode]: [\r\n        ...(selectedAction[selectedNode] || []),\r\n        clickedAction.id\r\n      ]\r\n    }));\r\n    let tempElems = Object.assign([], elements);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === selectedNode);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        actions: [\r\n          ...(tempElems[tempElemIndex].data?.actions || []),\r\n          clickedAction\r\n        ]\r\n      }\r\n    };\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleDeleteCondition = (nodeId, itemId) => {\r\n    let tempElems = Object.assign([], elementsStateRef.current);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === nodeId);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        conditions: (tempElems[tempElemIndex].data?.conditions || []).filter(\r\n          t => t.id !== itemId\r\n        )\r\n      }\r\n    };\r\n    setSelectedCondition({\r\n      ...selConditionStateRef.current,\r\n      [selectedNodeStateRef.current]: (\r\n        selConditionStateRef.current[selectedNodeStateRef.current] || []\r\n      ).filter(c => c !== itemId)\r\n    });\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleDeleteAction = (nodeId, itemId) => {\r\n    let tempElems = Object.assign([], elementsStateRef.current);\r\n    let tempElemIndex = tempElems.findIndex(t => t.id === nodeId);\r\n    tempElems[tempElemIndex] = {\r\n      ...tempElems[tempElemIndex],\r\n      data: {\r\n        ...tempElems[tempElemIndex].data,\r\n        actions: (tempElems[tempElemIndex].data?.actions || []).filter(\r\n          t => t.id !== itemId\r\n        )\r\n      }\r\n    };\r\n    setSelectedAction({\r\n      ...selActionStateRef.current,\r\n      [selectedNodeStateRef.current]: (\r\n        selActionStateRef.current[selectedNodeStateRef.current] || []\r\n      ).filter(a => a !== itemId)\r\n    });\r\n    setElements(tempElems);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const nodes = elements.filter(el => el.type === \"btnSelectorNode\");\r\n    const outputArr = [];\r\n    nodes.forEach(node => {\r\n      switch (node.data.type) {\r\n        case \"event\":\r\n          outputArr.push({ event: node.data.event });\r\n          break;\r\n        case \"condition\":\r\n          outputArr.push({ condition: node.data.conditions });\r\n          break;\r\n        case \"action-yes\":\r\n        case \"action\":\r\n          outputArr.push({ [node.data.type]: [...node.data.actions] });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n    console.log(\"output\", outputArr);\r\n  };\r\n\r\n  return (\r\n    <Background fullHeight color=\"HomePage grey100\">\r\n      {showDrawer && (\r\n        <div className=\"drawer\">\r\n          {showDrawer === \"events\" && (\r\n            <>\r\n              <CardHeader>\r\n                <Typography variant=\"h3\">Events</Typography>\r\n              </CardHeader>\r\n              <CardBody\r\n                type=\"events\"\r\n                nodeId={selectedNode}\r\n                listItems={EVENTS}\r\n                selectedId={selectedEvent}\r\n                handleSelect={handleEventChange}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {showDrawer === \"conditions\" && (\r\n            <>\r\n              <CardHeader>\r\n                <Typography variant=\"h3\">Conditions</Typography>\r\n              </CardHeader>\r\n              <CardBody\r\n                type=\"conditions\"\r\n                nodeId={selectedNode}\r\n                listItems={CONDITIONS}\r\n                selectedId={selectedCondition}\r\n                handleSelect={handleConditionChange}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {showDrawer === \"actions\" && (\r\n            <>\r\n              <CardHeader>\r\n                <Typography variant=\"h3\">Actions</Typography>\r\n              </CardHeader>\r\n              <CardBody\r\n                type=\"actions\"\r\n                nodeId={selectedNode}\r\n                listItems={ACTIONS}\r\n                selectedId={selectedAction}\r\n                onFocusId={clickedAction?.id}\r\n                handleSelect={handleActionChange}\r\n              />\r\n              {clickedAction && (\r\n                <>\r\n                  <CardHeader>\r\n                    <Typography variant=\"h3\">Action Details</Typography>\r\n                  </CardHeader>\r\n                  <div className=\"card-body\">\r\n                    <TextField\r\n                      fullWidth\r\n                      margin=\"dense\"\r\n                      onChange={e =>\r\n                        setClickedAction(prev => ({\r\n                          ...prev,\r\n                          value: e.target.value\r\n                        }))\r\n                      }\r\n                      type={clickedAction.type}\r\n                      value={clickedAction.value || \"\"}\r\n                      label={clickedAction.label}\r\n                    />\r\n                    <Button\r\n                      variatn=\"text\"\r\n                      disableRipple\r\n                      onClick={handleAddAction}\r\n                    >\r\n                      Add\r\n                    </Button>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"home-section\">\r\n        <CardHeader handleSave={handleSave}>\r\n          <Typography variant=\"h3\">Map your automation</Typography>\r\n        </CardHeader>\r\n        <div className=\"flow-body\">\r\n          <ReactFlow\r\n            elementsSelectable={true}\r\n            elements={elements}\r\n            onElementsRemove={onElementsRemove}\r\n            onConnect={onConnect}\r\n            nodeTypes={nodeTypes}\r\n            deleteKeyCode={46} /* 'delete'-key */\r\n          />\r\n        </div>\r\n      </div>\r\n    </Background>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}